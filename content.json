{"pages":[{"title":"","text":"个人简介 -&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;个人信息：杭州电子科技大学本科生通信工程专业正在学习 Java，C码畜一枚坚信代码改变世界 博客信息 网站采用的Icarus 主题 追求尽可能的简洁，清晰，易用。 在 Icarus 主题之上进行了部分修改。 更新日志：–2020.11.25：创建博客 本站推荐索引 博客主题相关 github Issue 作为博客微型数据库的应用 github page 网站 cdn 优化加速 博客源码分享 博客换肤的一种实现方式思路 博客中 gitalk 最新评论的获取 博客图片上传 picgo 工具 github 图传使用 安装、部分配置 icarus 主题中文版 技术知识点 Java 并发知识点 法律法规 法律法规数据库 中华人民共和国国旗法 中华人民共和国宪法 中华人民共和国消费者权益保护法 中华人民共和国刑事诉讼法 中华人民共和国婚姻法 中华人名共和国网络安全法 中华人民共和国劳动法 其他 计划2020 计划 2019.12.31 2020-GOALS 2019 计划 时间轴记录","link":"/about/index.html"},{"title":"","text":"🎈🎈微笑墙🎈🎈 彭小苒 唐艺昕 李一桐 gakki 图片搜集于互联网，侵权请留言，马上处理😊。","link":"/album/index.html"},{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://removeif.github.io/images/avatar.jpg 网站名称：辣椒の酱 网站地址：https://removeif.github.io 网站简介：后端开发，技术分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"","text":"&nbsp;&nbsp;听听音乐 音乐播放器由mePlayer提供，布局参照网友博客所作，感谢作者的辛勤付出。更多音乐分享请查看歌单。 &nbsp;&nbsp;看看视频 ->点击以下条目开始播放视频,向下滑动查看更多","link":"/media/index.html"},{"title":"音乐歌单收藏","text":"温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/index.html"},{"title":"","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"","text":"碎碎念 tips：github 登录后按时间正序查看、可点赞加 ❤️..「+99次查看」 碎碎念加载中，请稍等... $.getScript(\"/js/gitalk_self.min.js\", function () { var gitalk = new Gitalk({ clientID: '28275b80bf51a2d495bf', clientSecret: 'd6bc0b6ca167dde4c9aa4c29252435177ac290a5', id: '666666', repo: 'issue_database', owner: 'wujunyi792', admin: \"wujunyi792\", createIssueManually: true, distractionFreeMode: false }); gitalk.render('comment-container1'); });","link":"/self-talking/index.html"}],"posts":[{"title":"C语言字符串学习笔记","text":"摘要C字符串函数，有必要好好学习，对一些字符串的处理，用正确的函数很重要。 获取字符串的长度：strlen 函数 拷贝字符串：strcpy函数和 strncpy函数 连接字符串：strcat 函数和 strncat 函数 比较字符串：strcmp 函数和 strncmp 函数 strcpy字符串复制12345678910111213#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main(){ char str1[100] = &quot;Original&quot;; char str2[10] = &quot;New&quot;; strcpy(str1, str2); printf(&quot;%s\\n&quot;, str1); return 0;} 结果应该是只打印 New 这个字符串。可能会觉得 str1 的长度比 str2 长，调用 strcpy 函数后会只覆盖前边的内容，后边保留……但事实上并不是这样，因为 strcpy 函数复制 str2 的时候，会将该字符串最后的 ‘\\0’ 也一并复制过去。如图： strncpy字符串复制12345678910111213141516171819#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main(){ char str1[] = &quot;To be or not to be&quot;; char str2[40]; char str3[40]; strncpy(str2, str1, sizeof(str2)); strncpy(str3, str2, 5); str3[5] = '\\0'; //重要!!!!!!!!!!!!!!!!!!!! printf(&quot;%s\\n&quot;, str1); printf(&quot;%s\\n&quot;, str2); printf(&quot;%s\\n&quot;, str3); return 0;} 输出为： 123To be or not to beTo be or not to beTo be 参数 含义 dest 指向存放字符串的目标数组 src 指向待拷贝的源字符串 n 指定拷贝的最大长度 和 strcpy 函数一样，strncpy(dest, src, n) 函数将拷贝源字符串的 n 个字符到目标数组中。如果源字符串的长度小于 n，那么就用 ‘\\0’ 填充额外的空间。如果源字符串的长度大于或等于 n，那么只有 n 个字符被拷贝到目标数组中（注意：这样的话将不会以结束符 ‘\\0’ 结尾）。 为了使该函数更“安全”，建议使用 dest[sizeof(dest) - 1] = ‘\\0’; 语句确保目标字符串是以 ‘\\0’ 结尾. sizeof运算符&amp;strlen字符串长度1234567891011121314#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main(){ char str[] = &quot;I love mjclouds.com!&quot;; str[7] = '\\0'; printf(&quot;sizeof str = %d\\n&quot;, sizeof(str)); printf(&quot;strlen str = %d\\n&quot;, strlen(str)); return 0;} 该程序输出sizeof str = 21 strlen str = 7 sizeof 运算符是取得字符串的尺寸，即该字符串所处存储空间的大小。代码开头的 char str[] = &quot;I love mjclouds.com!&quot; 决定了该字符数组的尺寸。而字符串的长度则是由第一个遇到的结束符（’\\0’）所定义的。只要编译器读取到结束符\\0，它不管你字符数组后边是否有其它内容，都会认为字符串已经结束。 strcat连接字符串123456789101112131415#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main(){ char str1[100] = &quot;Original String&quot;; char str2[] = &quot;New String&quot;; strcat(str1, &quot; &quot;); strcat(str1, str2); printf(&quot;str1: %s\\n&quot;, str1); return 0;} 输出是： 12str1: Original String New String **strcat(dest, src) ** 参数 含义 dest 指向用于存放字符串的目标数组，它应该包含一个字符串，并且提供足够容纳连接后的总字符串长度的空间（包含结束符 ‘\\0’） scr 指向待连接的源字符串，该参数不应该与 dest 参数指向的位置发生重叠 strcat 函数用于连接两个字符串。 将源字符串拷贝并连接到目标数组存放的字符串后边，此过程将覆盖第一个参数的结束符 ‘\\0’。 两个参数的位置不应该重叠。 strncat连接字符串12345678910111213141516#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main(){ char str1[20] = &quot;I &quot;; char str2[20] = &quot;love &quot;; char str3[20] = &quot;FishC.com!&quot;; strncat(str1, str2, 5); strncat(str1, str3, 10); printf(&quot;str1: %s\\n&quot;, str1); return 0;} 输出为： 1str1: I love FishC.com! strncat(dest, src, n) 参数 含义 dest 指向用于存放字符串的目标数组，它应该包含一个字符串，并且提供足够容纳连接后的总字符串长度的空间（包含结束符 ‘\\0’） src 指向待连接的源字符串，该参数不应该与 dest 参数指向的位置发生重叠 n 指定待连接的源字符串的最大长度 strncat 函数用于拷贝源字符串中的 n 个字符到目标数组的字符串后边，并在末尾添加结束符 ‘\\0’。 如果源字符串的长度小于 n，那么不会像 strncpy 函数那样使用 ‘\\0’ 进行填充（但结束符 ‘\\0’ 还是有的）。 另外，目标数组中的原有的字符串并不算在 n 中。 strcmp 比较字符串&amp;strncmp比较字符串1234567891011121314151617181920#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main() { char str1[10] = &quot;I love FishC.com&quot;; char str2[20] = &quot;I love mjclouds.com&quot;; if (!strcmp(str1, str2)) { printf(&quot;两个字符串完全一致！\\n&quot;); } else { printf(&quot;两个字符串不同！\\n&quot;); } if (!strncmp(str1, str2, 7)) { printf(&quot;两个字符串前7个字符完全一致！\\n&quot;); } else { printf(&quot;两个字符串前7个字符不同！\\n&quot;); } return 0;} 输出为： 12两个字符串不同！两个字符串前7个字符完全一致！ strcmp(s1, s2) (str1, str2, n) 参数 含义 s1 指向待比较的字符串 1 s2 指向待比较的字符串 2 n 指定待比较的字符数 strcmp 函数用于比较两个字符串。 该函数从第一个字符开始，依次比较每个字符的 ASCII 码大小，直到发现两个字符不相等或抵达结束符（’\\0’）为止。 返回值&lt;0，意思是 字符串 1 的字符小于字符串 2 对应位置的字符； 返回值=0，意思是 字符串 1 的字符等于字符串 2 对应位置的字符； 返回值&gt;0，意思是 字符串 1 的字符大于字符串 2 对应位置的字符； strncmp 函数用于比较两个字符串的前 n 个字符。 该函数从第一个字符开始，依次比较每个字符的 ASCII 码大小，发现两个字符不相等或抵达结束符（’\\0’）为止，或者前 n 个字符完全一样，也会停止比较。 返回值类型同strcmp 参考文章:参考链接","link":"/2020/12/23/C%E8%AF%AD%E8%A8%80%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/11/25/hello-world/"},{"title":"Markdown语法与Typora初尝试","text":"摘要首页显示摘要内容（替换成自己的） 众所周知，当打开GitHub上几乎任何一个仓库，都会有一个readme.md文件，就像这张图展示的一样。在GitHub中可以轻松浏览这种格式的文件，一般里面写的是该仓库的介绍及操作说明，但是将该文件下载到电脑里，普通的办公软件却打不开。So what is it? MarkdownMarkdown 是什么？Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。Markdown 编写的文档后缀为 .md, .markdown。当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如GitHub、简书等。 Markdown 完全由标点符号组成, 这些标点经过仔细挑选以使他们看上去和表达的含义相同. 例如, 星号(*)标记的单词就像 强调. 列表就像是列表. 如果你使用过 email 的话, 就连块引用都像引用的文本段落. Markdown 是用于创作web 文档的.Markdown 从来都不是要取代 HTML . Markdown 的目标是易于阅读, 创作和编辑文章. HTML 是一种 发布 格式; Markdown 是一种 创作 格式. 因此, Markdown 处理的都是纯文本. 语法规范 标题Markdown标题有两种格式。 使用=和-标记一级标题和二级标题 显示效果如下： 标记语言格式： 1234我是一级标题，我底下的=只有一个也行===========我是二级标题，我底下的-只有一个也行----------- 值得注意的是，有时候我们用Typora等软件编辑的时候，输入完标题行敲击Enter并输入====却没有标题效果，我们只需将Enter换为Shift+Enter便可解决这一问题，这是由于Enter为换段而非换行所致。具体在段落章节中具体介绍。 段落 Markdown语法中， 列表 区块 代码 链接 图片 表格 其他 参考文章:参考链接","link":"/2020/11/26/Markdown%E8%AF%AD%E6%B3%95%E4%B8%8ETypora%E5%88%9D%E5%B0%9D%E8%AF%95/"},{"title":"PDF的使用","text":"摘要首页显示摘要内容（替换成自己的） PDF介绍The Portable Document Format (PDF) is a file format developed by Adobe in 1993 to present documents, including text formatting and images, in a manner independent of application software, hardware, and operating systems.Based on the PostScript language, each PDF file encapsulates a complete description of a fixed-layout flat document, including the text, fonts, vector graphics, raster images and other information needed to display it. PDF was standardized as ISO 32000 in 2008, and no longer requires any royalties for its implementation. PDF files may contain a variety of content besides flat text and graphics including logical structuring elements, interactive elements such as annotations and form-fields, layers, rich media (including video content), and three-dimensional objects using U3D or PRC, and various other data formats. The PDF specification also provides for encryption and digital signatures, file attachments, and metadata to enable workflows requiring these features. 说人话，PDF是一种版式文件，它有以下几个优点： 跨平台,任何支持pdf的设备都可以打开, 排版和样式不会乱掉，乃学术神器 能够嵌入字体,不会因为找不到字体而显示的乱七八糟 文件体积小,方便网络传输 可以制作为交互式pdf 支持资源自包含，也就是字体信息可以内嵌到文档里面，跟着文档走 支持高压缩的图片，上百兆的图片可以装订压缩到10几兆 支持矢量图形，放大缩小不影响清晰度 所有可以被打印的文档都可以转换成PDF 支持安全加密，用于公文流转。 所以用PDF格式文件提交作业绝对是个很不错的决定。那我们如何制作一个PDF文件？ 制作一个PDF文件 其实，几乎任何格式的文件都可以被转换为pdf，包括但不限于Word、Excel、PPT文件。如果电脑中没有安装Acrobat这类软件，我们可以按照如下方法将文件转换为PDF。这里以Word为例。 1.打开你要的word文件2.打开文件→打印3.选择打印机为Microsoft Print to PDF，按照自己的输出需求进行设置。这里一般默认即可。配置完成后点击打印4.此时会弹出将打印输出另存为的对话框，选择希望将pdf保存在哪，然后点保存5.去看看，一个pdf文件就出现了。 6.通过浏览器阅读这类文件，但如果你想编辑它，得另想办法。使用Acrobat编辑PDF未完待续。将提供Acrobat安装包和使用教程 参考文章:参考链接","link":"/2020/12/06/PDF%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"title":"VIP音乐解密","text":"摘要首页显示摘要内容（替换成自己的） 参考文章:参考链接","link":"/2020/12/23/VIP%E9%9F%B3%E4%B9%90%E8%A7%A3%E5%AF%86/"},{"title":"抽奖小应用","text":"摘要连夜写出来的小 demo，有参考一些 GitHub 和 gitee 程序，稍后有空会补充好文档！！*Attention:**这个网页还未适配手机端，所以在手机上显示效果不太好，稍后会进行修正（挖坑 ing）* 一些说明: 正常操作步骤：开始→停止→下一轮 在标签球上使用滚轮，可以对标签球进行缩放 新设备进入该网页时由于没有 json 文件缓存，会自动转入setting.html页面进行设置（目前接口还未配置好，故直接点击下面设置好点我GoGoGo to 主页面！即可） 参与人员可以修改，刷新网页数据会保留 参与人员栏底部重置按钮可以将参与人员列表恢复最初设置（61 人） 设置页面头部重置所有记录可以清空在主页的所有抽签记录 当下一轮按钮无法点击时，进入设置，进行重置所有记录后，通过点击下面设置好点我GoGoGo to 主页面！即可正常使用 不要点动态标签，它会带你去不知道什么页面！！（bug 还在优化） 参考文章:参考链接","link":"/2020/11/29/%E6%8A%BD%E5%A5%96%E5%B0%8F%E5%BA%94%E7%94%A8/"},{"title":"My One Note","text":"我个人的 Office OneNote 笔记本在手机 app 登陆不方便的时候可以在这里查看 参考文章:参考链接","link":"/2021/01/18/My%20One%20Note/"},{"title":"Arduino Uno基础知识学习笔记","text":"已经两年多没碰单片机了，现在正好有空，决定重新开始认真学习一下。 这一篇Blog主要介绍Arduino和基本元器件的一些基础知识 基础信息来自arduino官网的介绍： Arduino是一个基于易于使用的硬件和软件的开源原型设计平台。 Arduino板能够读取输入 - 传感器上的灯光，按钮上的手指或Twitter消息 - 并将其转换为输出 - 激活电机，打开LED，在线发布内容。您可以通过向板上的微控制器发送一组指令来告诉您的电路板该做什么。为此，您需要使用Arduino编程语言（基于连线）和基于Processing的Arduino软件（IDE）。 在使用中值得注意的是： 每个输出引脚最多提供40mA电流 总输出电流不得超过200mA Arduino勿放置在金属板上 输出引脚不可接地 输入引脚电压不得超过3.3V(5V) 不得向Vin引脚提供超过12V的电压 引脚说明 电源 Arduino Uno开发板可以使用三种方式供电： 直流电源插孔 -可以使用电源插孔为Arduino开发板供电。电源插孔通常连接到一个适配器。开发板的供电范围可以是5-20V，但制造商建议将其保持在7-12V之间。高于12V时，稳压芯片可能会过热，低于7V可能会供电不足。 VIN引脚 - 该引脚用于使用外部电源为Arduino Uno开发板供电。电压应控制在上述提到的范围内。 USB电缆 - 连接到计算机时，提供500mA/5V电压。 5v和3v3 根据制造商的数据手册，它们提供稳压的5V和3.3v，向外部组件供电。 GND 在Arduino Uno引脚分配图中，可以看到有5个GND引脚，它们都是互连的。 GND引脚用于闭合电路回路，并在整个电路中提供一个公共逻辑参考电平。务必确保所有的GND（Arduino、外设和组件）相互连接并且有共同点。 RESET - 复位Arduino开发板。 IOREF - 该引脚是输入/输出参考。它提供了微控制器工作的参考电压。 模拟输入Arduino Uno有6个模拟引脚，它们作为ADC（模数转换器）使用。 这些引脚用作模拟输入，但也可用作数字输入或数字输出。 Arduino引脚A0-A5能够读取模拟电压。在Arduino上，ADC具有10位分辨率，这意味着它可以通过1,024个数字电平表示模拟电压。 ADC将电压转换成微处理器可以理解的位。 数字引脚Arduino Uno的引脚0-13用作数字输入/输出引脚。其中，引脚13连接到板载的LED指示灯；引脚3、5、6、9、10、11具有PWM功能。 当数字引脚配置为输入时，电压由外部设备提供。该电压可以在0-5V之间变化，并转换成数字表示（0或1）。为了确定这一点，有2个阈值： 低于0.8v - 视为0 高于2.0v - 视为1 关于PWN脉宽调制（PWM）是一种调制技术，用于将消息编码为脉冲信号。 PWM由两个关键部分组成：频率和占空比。 PWM频率决定了完成单个周期（周期）所需的时间以及信号从高到低的波动速度。占空比决定信号在总时间段内保持高电平的时间。 以1kHz为例，若脉冲宽度为周期一半（称50%工作周期），就相当于输出高电位的一半电压；10%工作周期，就相当于高电位的十分之一电压。 PWN的电压输出计算方式如下： 模拟输出电压=脉冲宽度×高电平值 串行通信待补充 Arduino IDE 这是Arduino官方提供的集成开发环境。里面提供了一些示例程序和头文件。 安装过程略。但值得注意的是，如果购买的是部分国产arduino板，官方驱动可能无法识别到设备，此时需要安装CH340驱动。BTW，Mac OS和Linux不需要驱动。 当然也可以使用vscode进行开发，只需安装如下两个插件即可 新建一个adruino程序，输入ar+Tab即可自动生成程序基础框架。 vscode右下角可以设置开发板信息和端口信息 右上角可以进行编译、上传等操作 注意：使用前记得将arduino ide路径添加进vscode中arduino设置的path 参考文章:引脚分配图及定义 Arduino初学者指南","link":"/2021/02/01/Arduino%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/"},{"title":"PWN流水灯","text":"设有三个小灯A、B、C 事先处于熄灭状态，接着A 灯开始由暗到亮，再由亮变暗，A 灯熄灭之后B 灯开始由暗变亮，再由亮变暗，B 灯熄灭之后C 灯开始由暗变亮，再由亮变暗，如此循环。 知识准备&nbsp;&nbsp;&nbsp;PWM变频技术&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数字信号只有高、低电位两种状态，如同第一章的LED闪烁程序，把一只LED接上Arduino的第13引脚，每隔0.5s切换高低电位，LED将不停闪烁。这是一种以一秒钟为周期的切换信号，频率就是1Hz。提高切换频率（通常指30Hz以上），将能仿真模拟电压高低变化的效果。以下图的1kHz为例，若脉冲宽度（开启时间）为周期的一半（称为50%工作周期），就相当于输出高电位的一半电压；10%工作周期，就相当于输出0.5V。 如此，不需采用电阻降低电压，电能不会在变换的过程被损耗掉。这种在数字系统上“仿真”模拟输出的方式，称为脉冲宽度调制（Pulse Width Modulation，简称PWM）。某些强调省电的变频式洗衣机和冷气机等家电，也是运用PWM原理来调节机器的运转速度。 PWM的计算方式如下。 因此，在5V电源的情况下输出3.3V，从上面的式子可知： 根据计算结果得知，5V电源的66%PWM脉冲宽度就相当于输出3.3V。 &nbsp;&nbsp;&nbsp;PWM指令和默认频率​ Arduino的analogWrite指令可以指挥输出PWM信号，指令格式如下： 1analogWrite(端口号，模拟数值) 其中端口号必须是3、5、6、9、10或11这六个数字端口的其中之一；模拟数值介于0255之间，代表输出介于05V之间的仿真模拟电压值。 此外，Arduino微电脑板预设采用1kHz和500Hz两组不同的PWM输出频率，控制电机时，一般采用1kHz频率： 引脚5、6：约1kHz（由Timer 0系统定时器决定，这是delay()等函数的基准时间，不建议更改） 引脚3、11（Timer 2）以及9、10（Timer 1）：约500Hz &nbsp;&nbsp; LED接法​ led的工作电压 颜色 正向电压 红色 1.7V ~ 2.2V 橙色 2.0V 黄色 2.1V 绿色 2.2V 蓝色 3.2V ~ 3.8V 白色 3.2V ~ 3.8V LED的工作电压约2V，但Arduino的输出电压是5V，我们应该在Arduino的输出和LED之间连接一个限流电阻。连接方式有两种。 左边的接法是由微处理器提供负载所需电流，一般称之为源流（sourve current）； 右边的接法是由电源（Vcc）提供电流，此谓之替流（sink current） &nbsp;&nbsp; 电阻计算为计算方便，LED工作电压通常取2V，电流去10mA（注：高亮度LED的工作电压约3V，工作电流约30mA）。 设计方案简简单单设计完成 材料清单 材料 数量 Arduino Uno板 1 面包板 1 LED 3 1kΩ电阻 3 杜邦线 若干 代码123456789101112131415161718192021222324252627282930const byte LEDS[] = {9, 10, 11};void setup(){ for (byte i = 0; i &lt; sizeof(LEDS); i++) { pinMode(LEDS[i], OUTPUT); }}void loop(){ int a = 0; for (byte i = 0; i &lt; sizeof(LEDS); i++) { while (a &lt;= 255) { analogWrite(LEDS[i], a++); delay(10); } while (a &gt;= 0) { analogWrite(LEDS[i], a--); delay(10); } delay(50); } delay(50);} 成果展示 参考文章:参考链接","link":"/2021/02/01/PWN%E6%B5%81%E6%B0%B4%E7%81%AF/"}],"tags":[{"name":"C","slug":"C","link":"/tags/C/"},{"name":"字符串函数","slug":"字符串函数","link":"/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"Typora","slug":"Typora","link":"/tags/Typora/"},{"name":"PDF","slug":"PDF","link":"/tags/PDF/"},{"name":"软件","slug":"软件","link":"/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"音乐解密","slug":"音乐解密","link":"/tags/%E9%9F%B3%E4%B9%90%E8%A7%A3%E5%AF%86/"},{"name":"iframe框架","slug":"iframe框架","link":"/tags/iframe%E6%A1%86%E6%9E%B6/"},{"name":"抽奖","slug":"抽奖","link":"/tags/%E6%8A%BD%E5%A5%96/"},{"name":"小游戏","slug":"小游戏","link":"/tags/%E5%B0%8F%E6%B8%B8%E6%88%8F/"},{"name":"笔记本","slug":"笔记本","link":"/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"},{"name":"Microsoft","slug":"Microsoft","link":"/tags/Microsoft/"},{"name":"Arduino","slug":"Arduino","link":"/tags/Arduino/"},{"name":"arduino","slug":"arduino","link":"/tags/arduino/"}],"categories":[{"name":"学习笔记","slug":"学习笔记","link":"/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"标记语言","slug":"标记语言","link":"/categories/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/"},{"name":"软件分享","slug":"软件分享","link":"/categories/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"},{"name":"在线小工具","slug":"在线小工具","link":"/categories/%E5%9C%A8%E7%BA%BF%E5%B0%8F%E5%B7%A5%E5%85%B7/"},{"name":"iframe框架","slug":"iframe框架","link":"/categories/iframe%E6%A1%86%E6%9E%B6/"},{"name":"软件教程","slug":"软件分享/软件教程","link":"/categories/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/%E8%BD%AF%E4%BB%B6%E6%95%99%E7%A8%8B/"},{"name":"音乐","slug":"在线小工具/音乐","link":"/categories/%E5%9C%A8%E7%BA%BF%E5%B0%8F%E5%B7%A5%E5%85%B7/%E9%9F%B3%E4%B9%90/"},{"name":"iframe","slug":"iframe","link":"/categories/iframe/"},{"name":"笔记","slug":"iframe/笔记","link":"/categories/iframe/%E7%AC%94%E8%AE%B0/"},{"name":"单片机","slug":"单片机","link":"/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"},{"name":"笔记","slug":"单片机/笔记","link":"/categories/%E5%8D%95%E7%89%87%E6%9C%BA/%E7%AC%94%E8%AE%B0/"},{"name":"arduino","slug":"单片机/arduino","link":"/categories/%E5%8D%95%E7%89%87%E6%9C%BA/arduino/"}]}